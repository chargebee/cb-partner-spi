openapi: 3.0.0
info:
  description: |
    ## E-invoicing Service Provider Interface (SPI) - Overview
      Chargebee streamlines e-invoicing compliance across regions by facilitating the following operations throughout the billing lifecycle.

    1) Retrieve E-invoicing Activations:
        - Retrieves the list of country and network activations that are configured in the connected e-invoicing provider platform.
        - Each activation reflects a country and e-invoicing network that has been set up and made available by the provider.
        - Chargebee uses this operation during provider enablement to determine which activations can be offered to merchants.
    2) Document Submission:
        - Submits invoices and credit notes to external e-invoicing systems for validation, compliance processing, and delivery to tax authorities or trading partners.
    3) Status Tracking:
        - Supports asynchronous document lifecycle tracking through webhook notifications sent by the e-invoicing adapter. These updates reflect real-time status changes as documents move through validation, compliance, and regulatory delivery stages.
        - Allows on-demand status checks to retrieve the latest processing state of submitted documents, ensuring continued visibility even if webhook delivery is delayed or disrupted.
    4) Final Document Retrieval:
        - Retrieves finalized and regulator-approved documents for archiving, auditing or customer-facing use.

    Chargebee leverages external e-invoicing services to execute these operations effectively. These external e-invoicing servies are the  certified vendors offering APIs to handle e-invoicing compliance and document exchange with tax authorities.

    ## The Role of the E-invoicing Adapter App:
      To connect with external e-invoicing systems, Chargebee uses an E-invoicing Adapter App -  a bridge that enables secure and standardized communication between Chargebee and the e-invoicing system. This communication is governed by the E-invoicing Service Provider Interface (SPI).

    ## Building an E-invoicing Adapter App
      To integrate an e-invoicing system with Chargebee, you must implement the E-invoicing SPI by developing an adapter app. This is required in the following scenarios:

      - As an E-invoicing Provider:
        - Connect your compliance platform to Chargebee so merchants can automatically submit billing documents in a regulator-approved format.
      - As a System Integrator:
        - Build a connector that bridges a third-party e-invoicing provider and Chargebee, enabling seamless integration for merchants.

    By implementing the E-invoicing SPI, you enable Chargebee to support global regulatory compliance through a scalable and region-agnostic architecture.
  title: E-Invoicing Service Provider Interface
  version: 1.0.0
servers:
- description: Production server (replace with actual service URL)
  url: https://api.example.com
- description: Sandbox server for testing
  url: https://sandbox.example.com
security:
- ApiKeyAuth: []
tags:
- description: Operations related to e-invoicing activations
  name: Activations
- description: Operations related to e-invoicing documents
  name: Documents
paths:
  /credentials/validate:
    post:
      description: This endpoint is used to validate the credentials used to call
        the Service Provider.
      operationId: validateCredentials
      parameters:
      - description: Merchant's domain name will be sent by Chargebee
        in: header
        name: merchant_id
        required: false
        schema:
          type: string
      - description: Unique id of the request will be sent by Chargebee
        in: header
        name: trace_id
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                status: VALID
              schema:
                $ref: '#/components/schemas/CredentialValidationResponse'
          description: Authentication succeeded.
        "401":
          content:
            application/json:
              example:
                status: INVALID
              schema:
                $ref: '#/components/schemas/CredentialValidationResponse'
          description: Authentication failed.
        "429":
          description: Too many requests.
        "500":
          content:
            application/json:
              examples:
                Error500:
                  $ref: '#/components/examples/Error500Response'
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Unexpected error while processing request.
        "503":
          content:
            application/json:
              example:
                status: DOWN
                version: 1.0.0
                description: The service is unhealthy. Several components are down.
                components:
                - id: app-db-memory
                  name: Application Database Memory Usage
                  type: DATABASE
                  status: UP
                - id: adapter-server
                  name: Adapter API Server
                  type: ADAPTER
                  status: DOWN
                - id: service-server
                  name: API Server
                  type: API
                  status: DOWN
                time: 2022-11-01T10:42:08.131+05:30
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
          description: Service is unhealthy.
      summary: Validate credentials
      tags:
      - Authentication
      x-accepts: application/json
  /einvoicing/activations:
    get:
      description: |
        Retrieves the list of country-level e-invoicing activations supported by the connected e-invoicing provider.

        Each activation represents the provider's capability to support e-invoicing in a specific country and network.

        Implementation of this endpoint is recommended only if the e-invoicing provider exposes an API to retrieve activations for a specific country.

        This endpoint enables Chargebee to identify the countries and e-invoicing networks that are currently available for activation on the provider’s platform.

        Within Chargebee, the endpoint is invoked during the provider configuration workflow for a selected country. It retrieves information about activations that are either already set up or currently in progress. This helps users assess which e-invoicing capabilities are available for use or require further setup.
      operationId: listActivations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activations_response'
          description: A list of activations
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500_error_response'
          description: Unexpected error while processing request.
      summary: Retrieve a list of Activations.
      tags:
      - Activations
      x-accepts: application/json
  /einvoicing/data_input_fields:
    get:
      description: |
        This optional SPI endpoint is used to retrieve the required and optional data input fields for various e-invoicing scenarios supported by the provider. Each scenario is defined by a unique combination of country, e-invoicing network, and transaction type (B2B, B2C, or B2G).

        Implementation of this endpoint is recommended only if the e-invoicing provider requires merchant to configure field mappings themselves, rather than relying on predefined mappings managed by the provider or Chargebee.

        Within Chargebee, this endpoint is invoked during the e-invoicing setup workflow, when a user maps fields between the provider’s schema and Chargebee’s internal data model for a specific combination of country, network, and transaction type. Once this configuration is complete, the resulting field mappings are included in the document submission request and passed to the adapter via the field_mapping parameter, enabling the adapter to transform the SPI-compliant payload into the provider’s required format.
      operationId: getDataInputFields
      parameters:
      - description: |
          The ISO 3166-1 alpha-2 country code representing the country for which the e-invoicing data input fields need to be retrieved. Different countries may have varying e-invoicing requirements.
        explode: true
        in: query
        name: country_code
        required: true
        schema:
          example: DE
          type: string
        style: form
      - description: |
          The transaction type for which the data input fields need to be retrieved. Required fields may vary depending on the type: B2B (Business to Business), B2C (Business to Consumer), or B2G (Business to Government).
        explode: true
        in: query
        name: transaction_type
        required: true
        schema:
          enum:
          - B2B
          - B2C
          - B2G
          example: B2B
          type: string
        style: form
      - description: |
          The e-invoicing network or standard for which the data input fields need to be retrieved. This specifies the system or protocol used for invoice submission, such as PEPPOL, ZUGFeRD, Chorus Pro, or other country-specific standards.
        explode: true
        in: query
        name: network
        required: true
        schema:
          enum:
          - PEPPOL
          - ZUGFeRD
          example: PEPPOL
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/data_input_fields_response'
          description: Successfully retrieved the data input fields for the given
            scenario.
        "400":
          content:
            application/json:
              example:
                error_code: INVALID_REQUEST
                message: Missing required query parameters.
              schema:
                $ref: '#/components/schemas/bad_request_error_response'
          description: Bad Request – The request is malformed or missing required
            parameters.
        "401":
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                error_code: NOT_FOUND
                message: "No data input fields were found for the specified country,\
                  \ network, and transaction type."
              schema:
                $ref: '#/components/schemas/not_found_error_response'
          description: Not Found – The requested country or network does not exist
            or is not supported.
        "500":
          description: Internal Server Error – An error occurred on the server.
      summary: Retrieves data input fields
      tags:
      - Activations
      x-accepts: application/json
  /einvoicing/documents:
    post:
      description: |
        Submits a new document, such as an invoice or credit note, to the connected e-invoicing provider for validation, compliance checks, and delivery to the appropriate tax authorities or business partners.

        This endpoint is MANDATORY for enabling document submission through the Chargebee E-invoicing SPI framework.

        Within Chargebee, this endpoint is invoked asynchronously by an internal background job whenever a new invoice, credit note, or other supported billing document is generated and requires processing through the configured e-invoicing provider.

        If the e-invoicing provider requires the merchant to configure field mappings manually, instead of relying on predefined mappings managed by the provider or Chargebee, Chargebee will allow the merchant to complete this configuration within the application. The resulting field mappings will then be sent to the adapter as part of the `field_mapping` parameter during document submission.
      operationId: einvoicingDocumentSubmission
      requestBody:
        content:
          application/json:
            examples:
              invoice_document_submission_success:
                $ref: '#/components/examples/invoice_document_submission_success'
              invoice_document_submission_with_field_mapping_success:
                $ref: '#/components/examples/invoice_document_submission_with_field_mapping_success'
              credit_note_document_submission_success:
                $ref: '#/components/examples/credit_note_document_submission_success'
              credit_note_document_submission_with_field_mapping_success:
                $ref: '#/components/examples/credit_note_document_submission_with_field_mapping_success'
            schema:
              $ref: '#/components/schemas/document'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                einvoice_document_submission_pending:
                  $ref: '#/components/examples/einvoice_document_submission_pending'
              schema:
                $ref: '#/components/schemas/document_submission_response'
          description: Document submitted successfully.
        "400":
          content:
            application/json:
              examples:
                einvoice_document_submission_failed:
                  $ref: '#/components/examples/einvoice_document_submission_failed'
              schema:
                $ref: '#/components/schemas/bad_request_error_response'
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500_error_response'
          description: Unexpected error while processing request.
      summary: Submit a document
      tags:
      - Documents
      x-content-type: application/json
      x-accepts: application/json
  /webhooks/einvoicing/{einvoicing_provider_id}/document_status:
    post:
      description: |
        This Chargebee webhook endpoint is invoked by the e-invoicing adapter once a document such as an invoice or credit note has been processed by the e-invoicing provider.

        The adapter receives the webhook from the provider, transforms the payload into Chargebee’s standardized schema, and forwards the final document status to this endpoint.

        Chargebee uses this information to update its internal document tracking state and trigger downstream workflows, such as customer notifications or audit logs.

        This endpoint is idempotent. Repeated submissions with the same document ID and status will not result in duplicate processing.

        This endpoint requires an OAuth 2.0 access token. The Chargebee merchant must authorize the e-invoicing adapter via the OAuth flow to allow it to make authenticated POST calls to this endpoint.
      operationId: einvoicingDocumentStatusWebhook
      parameters:
      - explode: false
        in: path
        name: einvoicing_provider_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              webhook_document_status_success:
                $ref: '#/components/examples/webhook_document_status_success'
              webhook_document_status_failed:
                $ref: '#/components/examples/webhook_document_status_failed'
            schema:
              $ref: '#/components/schemas/webhook_document_status'
        required: true
      responses:
        "200":
          description: Webhook payload received and validated successfully. No retry
            required.
        "202":
          description: Webhook accepted for asynchronous processing.
        "400":
          description: Invalid payload or required fields missing.
        "401":
          description: Unauthorized request. Signature validation failed or sender
            is not allowed.
        "422":
          description: "Payload was well-formed but could not be processed (e.g.,\
            \ unknown document ID)."
        "500":
          description: Internal server error. Retry may be attempted by the sender.
      security:
      - OAuth2:
        - einvoicing.write
      summary: Receive document status updates
      tags:
      - Webhooks
      x-content-type: application/json
      x-accepts: application/json
  /einvoicing/documents/{document_id}/status:
    get:
      description: |
        Retrieves the current processing status of a document previously submitted to the connected e-invoicing provider.

        The status provides insights into whether the document has been successfully processed, is still under validation, has failed, or has been rejected by tax authorities or intermediaries.

        In Chargebee, this endpoint is periodically called to retrieve the latest processing status of the e-invoicing document. While Chargebee primarily relies on the webhook listener to receive status updates, this endpoint serves as a fallback mechanism to ensure status synchronization.
        '
      operationId: einvoicingDocumentStatus
      parameters:
      - description: The unique identifier assigned to the submitted document by the
          e‑invoicing provider.
        explode: false
        in: path
        name: document_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                successful_einvoice_document_submission_response:
                  $ref: '#/components/examples/successful_einvoice_document_submission_response'
                failed_einvoice_document_submission_response:
                  $ref: '#/components/examples/failed_einvoice_document_submission_response'
              schema:
                $ref: '#/components/schemas/document_status'
          description: Document status retrieved successfully.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/not_found_error_response'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500_error_response'
          description: Unexpected error while processing request.
      summary: Get Document Status
      tags:
      - Documents
      x-accepts: application/json
  /einvoicing/documents/{document_id}/download:
    get:
      description: |
        Retrieves the document content associated with the provided documentId from the connected e-invoicing provider.

        The document may be returned either as a pre-signed URL or as a direct binary stream (such as a PDF or XML file), depending on the provider’s capabilities and the SPI implementation.

        In Chargebee, this endpoint is called after the document has been successfully processed either to send it via email to the end customer or when the merchant initiates a download from the Chargebee UI.

        Implementing this endpoint is MANDATORY to support document retrieval operations.
      operationId: einvoicingDocumentDownload
      parameters:
      - explode: false
        in: path
        name: document_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: request_id
        required: true
        schema:
          description: The unique identifier of the document to be downloaded.
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                einvoice_document_download_url_response:
                  $ref: '#/components/examples/einvoice_document_download_url_response'
                einvoice_document_download_stream_response:
                  $ref: '#/components/examples/einvoice_document_download_stream_response'
              schema:
                $ref: '#/components/schemas/download_document_response'
          description: Document downloaded successfully.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/not_found_error_response'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500_error_response'
          description: Unexpected error while processing request.
      summary: Download Document
      tags:
      - Documents
      x-accepts: application/json
  /health:
    get:
      description: This endpoint is used to fetch the health status of the Service
        Provider.
      operationId: fetchHealth
      parameters:
      - description: Merchant's domain name will be sent by Chargebee
        in: header
        name: merchant_id
        required: false
        schema:
          type: string
      - description: Unique id of the request will be sent by Chargebee
        in: header
        name: trace_id
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                status: UP
                version: 1.0.0
                description: The service is healthy.
                components:
                - id: app-db-memory
                  name: Application Database
                  type: DATABASE
                  status: UP
                - id: adapter-server
                  name: Adapter API Server
                  type: ADAPTER
                  status: UP
                - id: service-server
                  name: API Server
                  type: API
                  status: UP
                time: 2022-11-01T10:42:08.131+05:30
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
          description: Service is healthy.
        "429":
          description: Too many requests.
        "500":
          content:
            application/json:
              examples:
                Error500:
                  $ref: '#/components/examples/Error500Response'
              schema:
                $ref: '#/components/schemas/BasicErrorResponse'
          description: Unexpected error while processing request.
        "503":
          content:
            application/json:
              example:
                status: DOWN
                version: 1.0.0
                description: The service is unhealthy. Several components are down.
                components:
                - id: app-db-memory
                  name: Application Database Memory Usage
                  type: DATABASE
                  status: UP
                - id: adapter-server
                  name: Adapter API Server
                  type: ADAPTER
                  status: DOWN
                - id: service-server
                  name: API Server
                  type: API
                  status: DOWN
                time: 2022-11-01T10:42:08.131+05:30
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
          description: Service is unhealthy.
      summary: Fetch the health status of the Service Provider.
      tags:
      - Health
      x-accepts: application/json
components:
  examples:
    invoice_document_submission_success:
      description: A sample invoice document submission request.
      value:
        id: INV-10001
        type: INVOICE
        issue_date: 2025-04-02
        tax_date: 2025-04-02
        currency_code: EUR
        due_date: 2025-04-30
        amount: 114.0
        note: Payment due in 28 days.
        accounting_supplier_party:
          name: Example Seller GmbH
          address:
            line_1: Hauptstr. 456
            line_2: Suite 5
            zip: "50667"
            city: Cologne
            country: DE
          tax_scheme:
          - scheme: VAT
            id: DE987654321
        accounting_customer_party:
          name: Example Buyer GmbH
          address:
            line_1: Berliner Str. 123
            line_2: 2nd Floor
            zip: "10115"
            city: Berlin
            country: DE
          tax_scheme:
          - scheme: VAT
            id: DE123456789
        payment_means:
        - code: ONLINE_PAYMENT_SERVICE
          payment_id: PAY-2024-00987
          card_account:
            primary_account_number_id: 4111********1111
            card_holder_name: Jane Smith
            network_id: MASTERCARD
        lines:
        - id: "1"
          description: Consulting Services - April
          quantity: 1
          unit_price: 100.0
          amount: 100.0
          item_code: CONS-APRIL
          classified_tax_category:
            percentage: 14
            category: VAT
            country: DE
        tax_total:
          tax_amount: 14.0
          tax_sub_totals:
          - taxable_amount: 100.0
            tax_amount: 14.0
            percentage: 14
            country: DE
            category: VAT
    invoice_document_submission_with_field_mapping_success:
      description: A sample invoice document submission request.
      value:
        id: INV-10001
        type: INVOICE
        issue_date: 2025-04-02
        tax_date: 2025-04-02
        currency_code: EUR
        due_date: 2025-04-30
        amount: 114.0
        note: Payment due in 28 days.
        accounting_supplier_party:
          name: Example Seller GmbH
          address:
            line_1: Hauptstr. 456
            line_2: Suite 5
            zip: "50667"
            city: Cologne
            country: DE
          tax_scheme:
          - scheme: VAT
            id: DE987654321
        accounting_customer_party:
          name: Example Buyer GmbH
          address:
            line_1: Berliner Str. 123
            line_2: 2nd Floor
            zip: "10115"
            city: Berlin
            country: DE
          tax_scheme:
          - scheme: VAT
            id: DE123456789
        payment_means:
        - code: ONLINE_PAYMENT_SERVICE
          payment_id: PAY-2024-00987
          card_account:
            primary_account_number_id: 4111********1111
            card_holder_name: Jane Smith
            network_id: MASTERCARD
        lines:
        - id: "1"
          description: Consulting Services - April
          quantity: 1
          unit_price: 100.0
          amount: 100.0
          item_code: CONS-APRIL
          classified_tax_category:
            percentage: 14
            category: VAT
            country: DE
        tax_total:
          tax_amount: 14.0
          tax_sub_totals:
          - taxable_amount: 100.0
            tax_amount: 14.0
            percentage: 14
            country: DE
            category: VAT
        field_mapping:
        - target: Invoice.cbc:ID
          source: document.id
        - target: Invoice.cbc:IssueDate
          source: document.issue_date
        - target: Invoice.cbc:InvoiceTypeCode
          fixed_value: 380
        - target: Invoice.cbc:DocumentCurrencyCode
          source: document.currency_code
        - target: Invoice.cac:AccountingSupplierParty.cac:Party.cbc:EndpointID
          source: document.accounting_supplier_party.legal_entity.company_id
        - target: Invoice.cac:AccountingSupplierParty.cac:Party.cac:PostalAddress.cac:Country.cbc:IdentificationCode
          source: document.accounting_supplier_party.address.country
        - target: Invoice.cac:AccountingSupplierParty.cac:Party.cac:PartyLegalEntity.cbc:RegistrationName
          source: document.accounting_supplier_party.legal_entity.registration_name
        - target: Invoice.cac:AccountingCustomerParty.cac:Party.cbc:EndpointID
          source: document.accounting_customer_party.legal_entity.company_id
        - target: Invoice.cac:AccountingCustomerParty.cac:Party.cac:PostalAddress.cac:Country.cbc:IdentificationCode
          source: document.accounting_customer_party.address.country
        - target: Invoice.cac:AccountingCustomerParty.cac:Party.cac:PartyLegalEntity.cbc:RegistrationName
          source: document.accounting_customer_party.legal_entity.registration_name
        - target: Invoice.cac:TaxTotal.cbc:TaxAmount
          source: document.tax_total.tax_amount
        - target: Invoice.cac:TaxTotal.cbc:TaxAmount.@currencyID
          source: document.currency_code
        - target: Invoice.cac:InvoiceLine.cbc:ID
          source: "document.lines[].id"
        - target: Invoice.cac:InvoiceLine.cbc:InvoicedQuantity
          source: "document.lines[].quantity"
        - target: Invoice.cac:InvoiceLine.cbc:InvoicedQuantity.@unitCode
          source: "document.lines[].unit_code"
        - target: Invoice.cac:InvoiceLine.cbc:LineExtensionAmount
          source: "document.lines[].amount"
        - target: Invoice.cac:InvoiceLine.cbc:LineExtensionAmount.@currencyID
          source: document.currency_code
        - target: Invoice.cac:InvoiceLine.cac:Item.cbc:Name
          source: "document.lines[].description"
        - target: Invoice.cac:InvoiceLine.cac:Item.cac:ClassifiedTaxCategory.cbc:ID
          source: "document.lines[].classified_tax_category[].category"
        - target: Invoice.cac:InvoiceLine.cac:Item.cac:ClassifiedTaxCategory.cac:TaxScheme.cbc:ID
          source: "document.lines[].classified_tax_category[].category"
        - target: Invoice.cac:InvoiceLine.cac:Price.cbc:PriceAmount
          source: "document.lines[].unit_price"
        - target: Invoice.cac:InvoiceLine.cac:Price.cbc:PriceAmount.@currencyID
          source: document.currency_code
        - target: Invoice.cbc:Note
          source: document.custom_fields.cf_invoice_reference_code
    credit_note_document_submission_success:
      description: A sample credit note document submission request.
      value:
        id: CN-20002
        type: CREDIT_NOTE
        issue_date: 2025-04-10
        tax_date: 2025-04-10
        currency_code: EUR
        due_date: 2025-04-30
        amount: 50.0
        note: Credit issued for April billing adjustment.
        billing_reference:
        - INV-10001
        accounting_supplier_party:
          name: Example Seller GmbH
          address:
            line_1: Hauptstr. 456
            line_2: Suite 5
            zip: "50667"
            city: Cologne
            country: DE
          tax_scheme:
          - scheme: VAT
            id: DE987654321
        accounting_customer_party:
          name: Example Buyer GmbH
          address:
            line_1: Berliner Str. 123
            line_2: 2nd Floor
            zip: "10115"
            city: Berlin
            country: DE
          tax_scheme:
          - scheme: VAT
            id: DE123456789
        payment_means:
        - code: ONLINE_PAYMENT_SERVICE
          payment_id: PAY-2024-01002
          card_account:
            primary_account_number_id: 4111********2222
            card_holder_name: John Doe
            network_id: VISA
        lines:
        - id: "1"
          description: Refund for overcharge in April
          quantity: 1
          unit_price: 50.0
          amount: 50.0
          item_code: APRIL-REFUND
          classified_tax_category:
            percentage: 14
            category: VAT
            country: DE
        tax_total:
          tax_amount: 7.0
          tax_sub_totals:
          - taxable_amount: 50.0
            tax_amount: 7.0
            percentage: 14
            country: DE
            category: VAT
    credit_note_document_submission_with_field_mapping_success:
      description: A sample credit note document submission request.
      value:
        id: CN-20002
        type: CREDIT_NOTE
        issue_date: 2025-04-10
        tax_date: 2025-04-10
        currency_code: EUR
        due_date: 2025-04-30
        amount: 50.0
        note: Credit issued for April billing adjustment.
        billing_reference:
        - INV-10001
        accounting_supplier_party:
          name: Example Seller GmbH
          address:
            line_1: Hauptstr. 456
            line_2: Suite 5
            zip: "50667"
            city: Cologne
            country: DE
          tax_scheme:
          - scheme: VAT
            id: DE987654321
        accounting_customer_party:
          name: Example Buyer GmbH
          address:
            line_1: Berliner Str. 123
            line_2: 2nd Floor
            zip: "10115"
            city: Berlin
            country: DE
          tax_scheme:
          - scheme: VAT
            id: DE123456789
        payment_means:
        - code: ONLINE_PAYMENT_SERVICE
          payment_id: PAY-2024-01002
          card_account:
            primary_account_number_id: 4111********2222
            card_holder_name: John Doe
            network_id: VISA
        lines:
        - id: "1"
          description: Refund for overcharge in April
          quantity: 1
          unit_price: 50.0
          amount: 50.0
          item_code: APRIL-REFUND
          classified_tax_category:
            percentage: 14
            category: VAT
            country: DE
        tax_total:
          tax_amount: 7.0
          tax_sub_totals:
          - taxable_amount: 50.0
            tax_amount: 7.0
            percentage: 14
            country: DE
            category: VAT
        field_mapping:
        - target: Creditnote.cbc:ID
          source: document.id
        - target: Creditnote.cbc:IssueDate
          source: document.issue_date
        - target: Creditnote.cbc:CreditNoteTypeCode
          fixed_value: 396
        - target: Creditnote.cbc:DocumentCurrencyCode
          source: document.currency_code
        - target: Creditnote.cac:BillingReference
          source: document.billing_reference
        - target: Creditnote.cac:AccountingSupplierParty.cac:Party.cbc:EndpointID
          source: document.accounting_supplier_party.legal_entity.company_id
        - target: Creditnote.cac:AccountingSupplierParty.cac:Party.cac:PostalAddress.cac:Country.cbc:IdentificationCode
          source: document.accounting_supplier_party.address.country
        - target: Creditnote.cac:AccountingSupplierParty.cac:Party.cac:PartyLegalEntity.cbc:RegistrationName
          source: document.accounting_supplier_party.legal_entity.registration_name
        - target: Creditnote.cac:AccountingCustomerParty.cac:Party.cbc:EndpointID
          source: document.accounting_customer_party.legal_entity.company_id
        - target: Creditnote.cac:AccountingCustomerParty.cac:Party.cac:PostalAddress.cac:Country.cbc:IdentificationCode
          source: document.accounting_customer_party.address.country
        - target: Creditnote.cac:AccountingCustomerParty.cac:Party.cac:PartyLegalEntity.cbc:RegistrationName
          source: document.accounting_customer_party.legal_entity.registration_name
        - target: Creditnote.cac:TaxTotal.cbc:TaxAmount
          source: document.tax_total.tax_amount
        - target: Creditnote.cac:TaxTotal.cbc:TaxAmount.@currencyID
          source: document.currency_code
        - target: Creditnote.cac:InvoiceLine.cbc:ID
          source: "document.lines[].id"
        - target: Creditnote.cac:InvoiceLine.cbc:InvoicedQuantity
          source: "document.lines[].quantity"
        - target: Creditnote.cac:InvoiceLine.cbc:InvoicedQuantity.@unitCode
          source: "document.lines[].unit_code"
        - target: Creditnote.cac:InvoiceLine.cbc:LineExtensionAmount
          source: "document.lines[].amount"
        - target: Creditnote.cac:InvoiceLine.cbc:LineExtensionAmount.@currencyID
          source: document.currency_code
        - target: Creditnote.cac:InvoiceLine.cac:Item.cbc:Name
          source: "document.lines[].description"
        - target: Creditnote.cac:InvoiceLine.cac:Item.cac:ClassifiedTaxCategory.cbc:ID
          source: "document.lines[].classified_tax_category[].category"
        - target: Creditnote.cac:InvoiceLine.cac:Item.cac:ClassifiedTaxCategory.cac:TaxScheme.cbc:ID
          source: "document.lines[].classified_tax_category[].category"
        - target: Creditnote.cac:InvoiceLine.cac:Price.cbc:PriceAmount
          source: "document.lines[].unit_price"
        - target: Creditnote.cac:InvoiceLine.cac:Price.cbc:PriceAmount.@currencyID
          source: document.currency_code
        - target: Creditnote.cbc:Note
          source: document.custom_fields.cf_invoice_reference_code
    einvoice_document_submission_pending:
      description: A sample response indicating the document is under processing.
      value:
        document_id: DOC-20250402-0002
        status: PENDING
        request_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    einvoice_document_submission_failed:
      description: A sample response indicating document submission failure due to
        missing required data.
      value:
        status: FAILED
        errors:
        - code: MISSING_REQUIRED_DATA
          message: The request did not contain a required property 'taxAmount'
          help_url: https://docs.example.com/errors#MISSING_REQUIRED_PARAMETER
    successful_einvoice_document_submission_response:
      description: A sample response indicating successful e-invoice document submission.
      value:
        document_id: DOC-20250402-0001
        status: Success
        submission_date: 2025-04-02T07:39:31.815Z
    failed_einvoice_document_submission_response:
      description: A sample failed document submission response due to unregistered
        VAT number.
      value:
        status: FAILED
        errors:
        - code: INVALID_DATA
          message: The VAT number provided is not registered with the tax authority.
    einvoice_document_download_url_response:
      description: A sample response with pre-signed S3 URL for document download.
      value:
        document_id: DOC-20250402-0001
        request_id: a3d56940-2827-4b87-a229-00d8b95cbe77
        documents:
        - mime_type: application/xml
          document_url: https://your-bucket.s3.amazonaws.com/invoice-20250402.xml?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=EXAMPLE
          expires_at: 2025-03-28T09:24:29Z
        network: peppol
    einvoice_document_download_stream_response:
      description: A sample response with Base64-encoded XML and PDF document content.
      value:
        document_id: DOC-20250402-0001
        request_id: a3d56940-2827-4b87-a229-00d8b95cbe77
        documents:
        - mime_type: application/xml
          document_content: PHh...Q0w+
          expires_at: 2025-03-28T09:24:29Z
        - mime_type: application/pdf
          document_content: JVBERi0xLjQKJ...CiUlRU9GCg==
          expires_at: 2025-03-28T09:24:29Z
        network: peppol
    webhook_document_status_success:
      description: A sample webhook notification indicating successful document submission.
      value:
        document_id: INV-10001
        document_type: INVOICE
        status: ACCEPTED
        timestamp: 2025-05-23T13:22:50.519Z
        tenant_id: einvoicing-test
    webhook_document_status_failed:
      description: A sample webhook notification indicating document submission failure.
      value:
        document_id: INV-10001
        document_type: INVOICE
        status: FAILED
        timestamp: 2025-05-23T13:22:50.519Z
        tenant_id: einvoicing-test
        errors:
          errors:
          - code: MISSING_REQUIRED_DATA
            message: The request did not contain a required property 'taxAmount'
            help_url: https://docs.example.com/errors#MISSING_REQUIRED_PARAMETER
    Error500Response:
      description: Unexpected error during processing the request.
      summary: Unexpected error.
      value:
        message: Unexpected error during processing the request.
  parameters:
    MerchantId:
      description: Merchant's domain name will be sent by Chargebee
      in: header
      name: merchant_id
      required: false
      schema:
        type: string
    TraceId:
      description: Unique id of the request will be sent by Chargebee
      in: header
      name: trace_id
      required: false
      schema:
        type: string
  responses:
    Error429:
      description: Too many requests.
    Error500:
      content:
        application/json:
          examples:
            Error500:
              $ref: '#/components/examples/Error500Response'
          schema:
            $ref: '#/components/schemas/BasicErrorResponse'
      description: Unexpected error while processing request.
    Error503:
      content:
        application/json:
          example:
            status: DOWN
            version: 1.0.0
            description: The service is unhealthy. Several components are down.
            components:
            - id: app-db-memory
              name: Application Database Memory Usage
              type: DATABASE
              status: UP
            - id: adapter-server
              name: Adapter API Server
              type: ADAPTER
              status: DOWN
            - id: service-server
              name: API Server
              type: API
              status: DOWN
            time: 2022-11-01T10:42:08.131+05:30
          schema:
            $ref: '#/components/schemas/HealthCheckResponse'
      description: Service is unhealthy.
  schemas:
    activation:
      properties:
        id:
          description: The unique identifier of the activation
          type: string
        status:
          $ref: '#/components/schemas/activation_status'
        company:
          $ref: '#/components/schemas/activation_company'
        country_activations:
          items:
            $ref: '#/components/schemas/country_activation'
          type: array
      type: object
    country_activation:
      properties:
        network:
          enum:
          - PEPPOL
          - ZUGFeRD
          example: PEPPOL
          type: string
        country_code:
          description: ISO 3166-1 alpha-2 country code where the e-invoicing activation
            is applicable.
          type: string
        einvoicing_type:
          description: Specifies the type of business transaction for which e-invoicing
            is applied.
          enum:
          - B2B
          - B2C
          - B2G
          type: string
      type: object
    activations_response:
      example:
        activations:
        - id: reg-123456789
          status:
            code: Completed
            message: Activation completed successfully.
          company:
            identifier: DE123456789
            display_name: Acme GmbH
          country_activations:
          - network: PEPPOL
            country_code: DE
            einvoicing_type: B2B
      properties:
        activations:
          items:
            $ref: '#/components/schemas/activation'
          type: array
      type: object
    data_input_fields_response:
      example:
        country_code: DE
        required_fields:
        - sub_fields:
          - description: The first line of the street address.
            type: string
            mandatory: true
            field_name: AccountingSupplierParty.PostalAddress.StreetLine1
          - description: The first line of the street address.
            type: string
            mandatory: true
            field_name: AccountingSupplierParty.PostalAddress.StreetLine1
          description: The unique number for the invoice.
          type: string
          field_name: InvoiceNumber
        - sub_fields:
          - description: The first line of the street address.
            type: string
            mandatory: true
            field_name: AccountingSupplierParty.PostalAddress.StreetLine1
          - description: The first line of the street address.
            type: string
            mandatory: true
            field_name: AccountingSupplierParty.PostalAddress.StreetLine1
          description: The unique number for the invoice.
          type: string
          field_name: InvoiceNumber
        optional_fields:
        - sub_fields:
          - description: The first line of the street address.
            type: string
            mandatory: true
            field_name: AccountingSupplierParty.PostalAddress.StreetLine1
          - description: The first line of the street address.
            type: string
            mandatory: true
            field_name: AccountingSupplierParty.PostalAddress.StreetLine1
          description: The discount applied to the invoice.
          type: decimal
          field_name: DiscountAmount
        - sub_fields:
          - description: The first line of the street address.
            type: string
            mandatory: true
            field_name: AccountingSupplierParty.PostalAddress.StreetLine1
          - description: The first line of the street address.
            type: string
            mandatory: true
            field_name: AccountingSupplierParty.PostalAddress.StreetLine1
          description: The discount applied to the invoice.
          type: decimal
          field_name: DiscountAmount
        transaction_type: B2B
        network: PEPPOL
      properties:
        country_code:
          description: The ISO country code for the scenario.
          example: DE
          type: string
        transaction_type:
          description: "The type of transaction (B2B, B2C, B2G)."
          enum:
          - B2B
          - B2C
          - B2G
          example: B2B
          type: string
        network:
          description: The e-invoicing network used for the transaction.
          example: PEPPOL
          type: string
        required_fields:
          description: The list of required fields for the e-invoicing mandate.
          items:
            $ref: '#/components/schemas/data_input_fields_response_required_fields_inner'
          type: array
        optional_fields:
          description: The list of optional fields for the e-invoicing mandate.
          items:
            $ref: '#/components/schemas/data_input_fields_response_optional_fields_inner'
          type: array
      type: object
    document:
      properties:
        id:
          description: A unique identifier for the document being submitted. This
            typically represents the invoice number or credit note number generated
            by Chargebee.
          type: string
        type:
          description: "Type of document, either an invoice or a credit note."
          enum:
          - INVOICE
          - CREDIT_NOTE
          type: string
        issue_date:
          description: The date when the document was issued. Format "YYYY-MM-DD"
          format: date
          type: string
        tax_date:
          description: The date used to determine tax. Format "YYYY-MM-DD"
          format: date
          type: string
        currency_code:
          description: "The currency code [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217)\
            \ for the document."
          type: string
        due_date:
          description: The date when the payment is due. Format "YYYY-MM-DD".
          format: date
          type: string
        amount:
          description: "Total payable amount for the document, including taxes."
          type: number
        note:
          description: A textual note that gives unstructured information that is
            relevant to the Document as a whole. Such as the reason for any correction
            or assignment note in case the document has been factored.
          type: string
        billing_reference:
          description: A group of business terms providing information on one or more
            preceding invoices. This enhances traceability in workflows where a document
            is linked to earlier billing records. For credit notes this is essential
            as they must reference the original invoice they amend.
          items:
            $ref: '#/components/schemas/document_billing_reference_inner'
          required:
          - invoice_document_reference
          type: array
        accounting_supplier_party:
          $ref: '#/components/schemas/document_accounting_supplier_party'
        accounting_customer_party:
          $ref: '#/components/schemas/document_accounting_customer_party'
        payment_means:
          description: A list of payment methods with corresponding payment details.
          items:
            $ref: '#/components/schemas/payment_means'
          type: array
        lines:
          items:
            $ref: '#/components/schemas/document_lines_inner'
          type: array
        tax_total:
          $ref: '#/components/schemas/document_tax_total'
        custom_fields:
          description: |
            Merchant-defined custom fields associated with the document. These fields allow merchants
            to include additional metadata beyond the standard schema. Each custom field is expected to follow
            the `cf_*` naming convention (e.g., `cf_invoice_reference_code`, `cf_tax_exemption_reason`).

            These fields can be referenced in `field_mapping` using dot paths like:
            `document.custom_fields.cf_invoice_reference_code`.

            Custom fields are optional and their usage depends on the provider's field mapping requirements.
          example:
            cf_invoice_reference_code: INT-2025-0098
            cf_tax_exemption_reason: Reverse Charge
          type: object
        field_mapping:
          description: |
            A list of field mapping definitions that describe how values from the Chargebee SPI document submission model should be translated
            to the target schema expected by the e-invoicing provider.

            Each mapping item specifies a target field in the provider schema and either:
              - A `source` field path pointing to a value in the Chargebee `document` model, or
              - A `fixed_value` to be used as a constant value.

            Both `source` and `target` use dot (`.`) notation to define field paths.

            The adapter uses this mapping to transform Chargebee’s SPI payload into the structure required by the configured provider
            during submission.

            This structure supports both dynamic and static field resolution while keeping transformation logic separate from adapter implementation.

            This field is **mandatory** for providers that requires merchant to configure field mappings themselves, rather than relying on predefined mappings managed by the provider or Chargebee.
          items:
            $ref: '#/components/schemas/document_field_mapping_inner'
          type: array
      required:
      - accountingCustomerParty
      - accountingSupplierParty
      - amount
      - currencyCode
      - dueDate
      - id
      - issueDate
      - lines
      - taxDate
      - taxTotal
      - type
      type: object
    payment_means:
      description: Defines the method and details for payment.
      properties:
        code:
          description: "The means, expressed as code, for how a payment is expected\
            \ to be or has been settled."
          enum:
          - CREDIT_TRANSFER
          - ONLINE_PAYMENT_SERVICE
          - DIRECT_DEBIT
          type: string
        payment_id:
          description: "A textual value used to establish a link between the payment\
            \ and the Invoice, issued by the Seller. Used for creditor's critical\
            \ reconciliation information. This information element helps the Seller\
            \ to assign an incoming payment to the relevant payment process."
          type: string
        payee_financial_account:
          $ref: '#/components/schemas/payment_means_payee_financial_account'
        payment_mandate:
          $ref: '#/components/schemas/payment_means_payment_mandate'
        card_account:
          $ref: '#/components/schemas/payment_means_card_account'
      type: object
    document_submission_response:
      example:
        document_id: document_id
        request_id: request_id
        status: ACCEPTED
      properties:
        document_id:
          description: The unique identifier assigned to the document by the e-invoicing
            provider. This identifier must be used for subsequent operations such
            as retrieving the document status and downloading the document.
          type: string
        status:
          description: The current status of the submitted document.
          enum:
          - ACCEPTED
          - FAILED
          - SUCCESS
          type: string
        request_id:
          description: A unique identifier assigned to the request for tracking and
            correlation purposes across systems and logs.
          type: string
      required:
      - document_id
      - status
      type: object
    document_status:
      example:
        document_id: DOC-20250402-0001
        status: Success
        submission_date: 2025-04-02T07:39:31.815Z
      properties:
        document_id:
          description: The unique identifier assigned to the document by the e-invoicing
            provider.
          type: string
        status:
          description: The current status of the document submission.
          enum:
          - ACCEPTED
          - FAILED
          - SUCCESS
          type: string
        submission_date:
          description: Date and time when the document was submitted.
          format: date-time
          type: string
        processing_details:
          $ref: '#/components/schemas/bad_request_error_response'
      required:
      - document_id
      - status
      type: object
    download_document_response:
      example:
        request_id: a3d56940-2827-4b87-a229-00d8b95cbe77
        documents:
        - mime_type: application/xml
          document_url: https://provider.com/downloads/invoice-20250402.xml
          expires_at: 2025-03-28T09:24:29Z
        network: peppol
      properties:
        document_id:
          type: string
        request_id:
          type: string
        documents:
          items:
            $ref: '#/components/schemas/download_document_response_documents_inner'
          type: array
      required:
      - document_id
      - documents
      - evidence
      - network
      - request_id
      type: object
    bad_request_error_response:
      example:
        errors:
        - code: MISSING_REQUIRED_DATA
          message: The request did not contain a required property 'taxAmount'
          help_url: https://docs.example.com/errors#MISSING_REQUIRED_PARAMETER
      properties:
        errors:
          items:
            $ref: '#/components/schemas/bad_request_error_response_errors_inner'
          type: array
      type: object
    not_found_error_response:
      example:
        errors:
        - code: INVALID_OPERATION
          message: The requested document is not found.
          help_url: https://docs.example.com/errors#INVALID_OPERATION
      properties:
        errors:
          items:
            $ref: '#/components/schemas/not_found_error_response_errors_inner'
          type: array
      type: object
    address:
      properties:
        line_1:
          description: First line of the address.
          type: string
        line_2:
          description: Second line of the address.
          type: string
        line_3:
          description: Third line of the address.
          type: string
        zip:
          description: Postal or ZIP code.
          type: string
        city:
          description: City name.
          type: string
        division:
          description: Division name.
          type: string
        country:
          description: ISO 3166-1 alpha-2 country code.
          type: string
      type: object
    tax_scheme:
      properties:
        scheme:
          description: "A code identifying the tax regime under which this party is\
            \ registered—such as VAT, GST, or a region-specific tax scheme. This enables\
            \ the adapter or e‑invoicing provider to apply the correct tax logic or\
            \ reporting rules."
          type: string
        id:
          description: "The tax identification number assigned to the party by the\
            \ relevant authority (for example, VAT number or legal registration ID).\
            \ It is used for official identification and compliance in the e‑invoicing\
            \ process."
          type: string
      required:
      - id
      - scheme
      type: object
    party_legal_entity:
      description: Legal entity information of the party.
      properties:
        registration_name:
          description: The full formal name by which the party is registered.
          type: string
        company_id:
          description: An identifier issued by an official registrar that identifies
            the party as a legal entity or person.
          type: string
      required:
      - registrationName
      type: object
    webhook_document_status:
      properties:
        document_id:
          description: Unique identifier of the submitted document.
          type: string
        document_type:
          description: Type of the document that was processed.
          enum:
          - INVOICE
          - CREDIT_NOTE
          type: string
        status:
          description: Current status of the document after processing by the provider.
          enum:
          - SUBMITTED
          - ACCEPTED
          - REJECTED
          - FAILED
          type: string
        timestamp:
          description: ISO 8601 timestamp indicating when the status was determined.
          format: date-time
          type: string
        tenant_id:
          description: Identifier of the tenant (merchant) for whom the document was
            processed.
          type: string
        errors:
          $ref: '#/components/schemas/bad_request_error_response'
      required:
      - document_id
      - document_type
      - status
      - tenant_id
      - timestamp
      type: object
    "500_error_response":
      description: An unexpected error occurred while processing your request.
      properties:
        message:
          description: A human-readable description of the unexpected error encountered.
          example: An unexpected error occurred while processing your request.
          type: string
      required:
      - message
    CredentialValidationResponse:
      example:
        status: null
      properties:
        status:
          $ref: '#/components/schemas/CredentialStatus'
      required:
      - status
      type: object
    CredentialStatus:
      description: The status of the credentials used for authentication.
      enum:
      - VALID
      - INVALID
      type: string
    BasicErrorResponse:
      additionalProperties: false
      description: The basic error response containing the error message and the help
        documentation link.
      properties:
        message:
          description: The description of the error with details about it's cause.
          example: Invalid Credentials
          maxLength: 250
          type: string
        helpUrl:
          description: The link to the documentation for more information about the
            error and the corrective action.
          example: https://apidocs.chargebee.com#Authentication
          format: uri
          type: string
      required:
      - message
      type: object
    HealthCheckResponse:
      example:
        components:
        - endpoints:
          - endpoints
          - endpoints
          name: name
          description: description
          id: id
          type: OTHER
          status: null
        - endpoints:
          - endpoints
          - endpoints
          name: name
          description: description
          id: id
          type: OTHER
          status: null
        description: description
        time: 2000-01-23T04:56:07.000+00:00
        version: version
        status: null
      properties:
        version:
          minLength: 1
          type: string
        description:
          description: The description of the health status returned by the Service
            Adapter.
          maxLength: 250
          type: string
        status:
          $ref: '#/components/schemas/HealthStatus'
        components:
          description: List of health status details for each component reported by
            the Service Adapter.
          items:
            $ref: '#/components/schemas/HealthCheckComponent'
          type: array
        time:
          description: The timestamp of the health status reported by the Service
            Adapter.
          format: date-time
          type: string
      required:
      - components
      - status
      - time
      type: object
    HealthStatus:
      description: The status of a specific component reported by the Service Adapter.
      enum:
      - UP
      - DOWN
      - WARN
      type: string
    HealthCheckComponent:
      description: The health status details of a specific component reported by the
        Service Adapter.
      example:
        endpoints:
        - endpoints
        - endpoints
        name: name
        description: description
        id: id
        type: OTHER
        status: null
      properties:
        id:
          description: The id of the component.
          maxLength: 50
          type: string
        name:
          description: The name of the component.
          maxLength: 150
          type: string
        type:
          description: |
            The type of component affected when `status` is `WARN` or `DOWN`. The possible values are:
            - `ADAPTER`: The reported status is for the Service Adapter.
            - `API`: The reported status is for the Service Provider.
            - `DATABASE`: The reported status is for a database dependency of the Service Provider.
            - `SYSTEM`: The reported status is for any other known system component such as cache or gateway.
            - `OTHER`: The reported status is either for a component that does not belong to the types described above or the source of the issue is unknown.
          enum:
          - OTHER
          - SYSTEM
          - API
          - ADAPTER
          - DATABASE
          type: string
        description:
          description: The detailed status of the component.
          maxLength: 250
          type: string
        status:
          $ref: '#/components/schemas/HealthStatus'
        endpoints:
          description: "When the `status` of the component is not `UP`, then the list\
            \ of endpoints affected."
          items:
            type: string
          type: array
      required:
      - id
      - name
      - status
      - type
      type: object
    activation_status:
      properties:
        code:
          description: The status code of the activation.
          enum:
          - COMPLETED
          - FAILED
          - PENDING
          type: string
        message:
          description: A detailed message describing the activation status.
          type: string
      type: object
    activation_company:
      properties:
        identifier:
          description: The unique identifier for the company
          type: string
        display_name:
          description: The display name of the company
          type: string
      type: object
    data_input_fields_response_required_fields_inner_sub_fields_inner:
      example:
        description: The first line of the street address.
        type: string
        mandatory: true
        field_name: AccountingSupplierParty.PostalAddress.StreetLine1
      properties:
        field_name:
          example: AccountingSupplierParty.PostalAddress.StreetLine1
          type: string
        description:
          example: The first line of the street address.
          type: string
        type:
          example: string
          type: string
        mandatory:
          example: true
          type: boolean
      type: object
    data_input_fields_response_required_fields_inner:
      example:
        sub_fields:
        - description: The first line of the street address.
          type: string
          mandatory: true
          field_name: AccountingSupplierParty.PostalAddress.StreetLine1
        - description: The first line of the street address.
          type: string
          mandatory: true
          field_name: AccountingSupplierParty.PostalAddress.StreetLine1
        description: The unique number for the invoice.
        type: string
        field_name: InvoiceNumber
      properties:
        field_name:
          description: The name of the required field.
          example: InvoiceNumber
          type: string
        description:
          description: A description of the field.
          example: The unique number for the invoice.
          type: string
        type:
          description: The data type of the field.
          example: string
          type: string
        sub_fields:
          description: Sub-fields for nested fields.
          items:
            $ref: '#/components/schemas/data_input_fields_response_required_fields_inner_sub_fields_inner'
          type: array
      type: object
    data_input_fields_response_optional_fields_inner:
      example:
        sub_fields:
        - description: The first line of the street address.
          type: string
          mandatory: true
          field_name: AccountingSupplierParty.PostalAddress.StreetLine1
        - description: The first line of the street address.
          type: string
          mandatory: true
          field_name: AccountingSupplierParty.PostalAddress.StreetLine1
        description: The discount applied to the invoice.
        type: decimal
        field_name: DiscountAmount
      properties:
        field_name:
          description: The name of the optional field.
          example: DiscountAmount
          type: string
        description:
          description: A description of the field.
          example: The discount applied to the invoice.
          type: string
        type:
          description: The data type of the field.
          example: decimal
          type: string
        sub_fields:
          description: Sub-fields for nested optional fields.
          items:
            $ref: '#/components/schemas/data_input_fields_response_required_fields_inner_sub_fields_inner'
          type: array
      type: object
    document_billing_reference_inner_invoice_document_reference:
      description: A group of business terms providing information on one or more
        preceding Invoices.
      properties:
        id:
          description: Identifier of the referenced invoice.
          type: string
        issue_date:
          description: Issue date of the referenced invoice.
          format: date
          type: string
      required:
      - id
      type: object
    document_billing_reference_inner:
      properties:
        invoice_document_reference:
          $ref: '#/components/schemas/document_billing_reference_inner_invoice_document_reference'
      type: object
    document_accounting_supplier_party:
      description: "Party responsible for issuing the document (that is, the supplier).\
        \ This represents the legal entity or business that creates the invoice and\
        \ bears responsibility for delivering goods or services."
      properties:
        name:
          description: Name of the supplier party.
          type: string
        address:
          $ref: '#/components/schemas/address'
        tax_scheme:
          description: List of tax identifiers associated with the supplier.
          items:
            $ref: '#/components/schemas/tax_scheme'
          type: array
        legal_entity:
          $ref: '#/components/schemas/party_legal_entity'
      required:
      - address
      - legalEntity
      - taxScheme
      type: object
    document_accounting_customer_party:
      description: "Party responsible for receiving the invoice (i.e., the customer)."
      properties:
        name:
          description: Name of the customer party.
          type: string
        address:
          $ref: '#/components/schemas/address'
        tax_scheme:
          description: List of tax identifiers associated.
          items:
            $ref: '#/components/schemas/tax_scheme'
          type: array
        legal_entity:
          $ref: '#/components/schemas/party_legal_entity'
      required:
      - address
      - legalEntity
      - taxScheme
      type: object
    document_lines_inner_classified_tax_category_inner:
      properties:
        percentage:
          description: "The tax rate percentage applicable to this tax category (e.g.,\
            \ 19 for 19% VAT)."
          type: number
        category:
          description: A code or label identifying the type of tax category.
          type: string
        country:
          description: "The ISO 3166-1 alpha-2 country code where the tax category\
            \ is applicable (e.g., DE for Germany)."
          type: string
      type: object
    document_lines_inner:
      properties:
        id:
          description: A unique identifier for the individual line within the document.
          type: string
        description:
          description: A textual note that gives unstructured information that is
            relevant to the document.
          type: string
        quantity:
          description: The quantity of items (goods or services) that is charged.
          type: integer
        unit_price:
          description: The unit price for this line.
          type: number
        amount:
          description: The total amount of the line without tax.
          type: number
        discount:
          description: The discount applied to the line.
          type: number
        item_code:
          description: The unique identifier (in Chargebee) of the product corresponding
            to the line.
          type: string
        classified_tax_category:
          description: "List of tax categories applicable to the invoice line, such\
            \ as VAT or other indirect taxes."
          items:
            $ref: '#/components/schemas/document_lines_inner_classified_tax_category_inner'
          type: array
      required:
      - amount
      - classifiedTaxCategory
      - description
      - id
      - name
      - quantity
      type: object
    document_tax_total_tax_sub_totals_inner:
      properties:
        taxable_amount:
          description: Total taxable amount for the category.
          format: double
          type: number
        tax_amount:
          description: Total Tax amount for the category
          format: double
          type: number
        percentage:
          description: The tax rate percentage applied to the taxable amount.
          format: double
          type: number
        country:
          description: The country code where the tax applies.
          type: string
        category:
          description: "The category of tax applied (e.g., VAT)."
          type: string
      type: object
    document_tax_total:
      description: Represents the total tax details for the document.
      properties:
        tax_amount:
          description: The total tax amount for the document.
          format: double
          type: number
        tax_sub_totals:
          items:
            $ref: '#/components/schemas/document_tax_total_tax_sub_totals_inner'
          type: array
      type: object
    document_field_mapping_inner:
      properties:
        target:
          description: "The field path in the target provider schema where the value\
            \ should be mapped (e.g., `Invoice/cbc:ID`)."
          type: string
        source:
          description: "A dot-path expression pointing to the value in the Chargebee\
            \ `document` model (e.g., `document.id`). Optional if `fixed_value` is\
            \ provided."
          type: string
        fixed_value:
          description: "A static value to be assigned to the target field if no source\
            \ path is used (e.g., `380` or `\"VAT\"`). Optional if `source` is provided."
      required:
      - target
      type: object
    payment_means_payee_financial_account:
      description: A group of business terms to specify credit transfer payments.
      properties:
        id:
          description: "A unique identifier of the financial payment account, at a\
            \ payment service provider, to which payment should be made. Such as IBAN\
            \ or BBAN (e.g., IBAN)."
          type: string
      required:
      - id
      type: object
    payment_means_payment_mandate:
      description: A group of business terms to specify a direct debit.
      properties:
        id:
          description: Unique identifier assigned by the Payee for referencing the
            direct debit mandate.
          type: string
        mandate_type:
          description: "Type of mandate (e.g., SEPA, national DD agreement)."
          type: string
      type: object
    payment_means_card_account:
      description: A group of business terms providing information about card used
        for payment contemporaneous with invoice issuance.
      properties:
        primary_account_number_i_d:
          description: The Primary Account Number (PAN) of the card used for payment.
          type: string
        card_holder_name:
          description: The name of the payment card holder.
          type: string
        network_id:
          description: "The identifier of the card network. (e.g., VISA, MasterCard)."
          type: string
      type: object
    download_document_response_documents_inner:
      example: PEPPOL
      properties:
        mime_type:
          description: The MIME type of the document.
          enum:
          - application/xml
          - application/pdf
          type: string
        document_url:
          description: Presigned URL to access the document. This param will be preferred
            if found over document_content.
          format: uri
          type: string
        document_content:
          description: Base64-encoded document content if URL is not available.
          format: byte
          type: string
        expires_at:
          description: The time until which the document URL is valid.
          example: 2025-03-28T09:24:29Z
          format: date-time
          type: string
        network:
          enum:
          - PEPPOL
          - ZUGFeRD
          type: string
      required:
      - mime_type
      type: object
    bad_request_error_response_errors_inner:
      properties:
        code:
          description: The error codes classify the type of exception that occurred
            during processing the request.
          enum:
          - INVALID_OPERATION
          - SERVICE_EXCEPTION
          - SERVICE_UNAVAILABLE
          - SERVICE_LIMIT_EXCEEDED
          - MISSING_REQUIRED_DATA
          - INVALID_DATA
          type: string
        message:
          description: A short message describing the reason for the error.
          type: string
        help_url:
          description: The link to the documentation for more information about the
            error and the corrective action.
          format: uri
          type: string
      required:
      - code
      - message
      type: object
    not_found_error_response_errors_inner:
      properties:
        code:
          description: Application-specific error code
          enum:
          - INVALID_OPERATION
          type: string
        message:
          description: A short message describing the reason for the error.
          type: string
        help_url:
          description: The link to the documentation for more information about the
            error and the corrective action.
          format: uri
          type: string
      required:
      - code
      - message
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey
    OAuth2:
      flows:
        authorizationCode:
          authorizationUrl: "https://{chargebee-domain}.chargebee.com/oauth/authorize"
          scopes:
            einvoicing.write: Submit document status updates to Chargebee
          tokenUrl: "https://{chargebee-domain}.chargebee.com/oauth/token"
      type: oauth2

