openapi: "3.0.0"
info:
  title: "E-Invoicing Service Provider Interface"
  description: |
    
    The E-Invoicing Service Provider Interface (SPI) is designed to enable Chargebee to seamlessly communicate with various Electronic Invoicing Service Providers. This SPI facilitates the following key functionalities:
    
    - **Document Submission:** Submit electronic documents to E-Invoice Service Providers for processing and compliance.
    - **Document Status Tracking:** Monitor the status of submitted e-invoices to ensure timely processing and resolution of any issues.
    - **Document Download:** Download e-invoice documents for record-keeping, auditing, and compliance purposes.
    - **Registration Management:** Manage registrations with e-invoicing networks, allowing businesses to register and activate mandates.
    - **Trading Partner Search:** Search and retrieve information about trading partners within the e-invoicing ecosystem.

    If you have an API that provides the services mentioned above and wish to integrate it with Chargebee, you can develop an adapter service following this specification. This will allow Chargebee to efficiently manage e-invoicing processes while ensuring compliance with local e-invoicing regulations.
  version: "1.0.0"
servers:
  - url: "https://api.example.com"
    description: "Production server (replace with actual service URL)"
  - url: "https://sandbox.example.com"
    description: "Sandbox server for testing"
tags:
  - name: "Registrations"
    description: "Operations related to e-invoicing registrations"
  - name: "Documents"
    description: "Operations related to e-invoicing documents"
  - name: "Trading Partners"
    description: "Operations related to searching and retrieving trading partner information"

security:
  - ApiKeyAuth: []
paths:
  /einvoicing/registrations:
    get:
      tags: ["Registrations"]
      summary: Retrieve a list of registrations
      operationId: listRegistrations
      responses:
        '200':
          description: A list of registrations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationsResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found

  /einvoicing/documents:
    post:
      tags: ["Documents"]
      summary: "Submit Document"
      description: "Submit a new document (invoice or credit note) to the e-invoicing service."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        '201':
          description: "Document submitted successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/DocumentSubmissionResponse"
                  - type: object
                    properties:
                      errors:
                        type: array
                        items:
                          $ref: "#/components/schemas/ErrorDetail"
                      request_id:
                        type: string
                        format: uuid
                        description: Unique identifier for tracing the request
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
  /einvoicing/documents/{documentId}/status:
    get:
      tags: ["Documents"]
      summary: "Get Document Status"
      parameters:
        - name: "documentId"
          in: "path"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Document status retrieved successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentStatus"
  /einvoicing/documents/{documentId}/download:
    get:
      tags: ["Documents"]
      summary: "Download Document"
      parameters:
        - name: "documentId"
          in: "path"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Document downloaded successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DownloadDocumentResponse"

  /einvoicing/trading-partners:
    get:
      tags: ["Trading Partners"]
      summary: Search for participants in the e-invoicing directory
      operationId: searchParticipants
      parameters:
        - name: $search
          in: query
          required: false
          description: Search term to find participants by name or identifier
          schema:
            type: string
        - name: $filter
          in: query
          required: false
          description: OData filter expression to refine the search results
          schema:
            type: string
        - name: $top
          in: query
          required: false
          description: Number of results to return
          schema:
            type: integer
            default: 10
        - name: $skip
          in: query
          required: false
          description: Number of results to skip (for pagination)
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: A list of participants matching the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantsResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found

components:
  schemas:
    Registration:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the registration
        registrationType:
          type: string
          description: The type of registration (e.g., 'Invoice')
        status:
          type: object
          properties:
            code:
              type: string
              description: The status code (e.g., 'Completed')
            message:
              type: string
              description: A message describing the registration status
        company:
          type: object
          properties:
            identifier:
              type: string
              description: The unique identifier for the company
            displayName:
              type: string
              description: The display name of the company
            location:
              type: string
              format: uri
              description: The API location URL for the company
        mandates:
          type: array
          items:
            $ref: '#/components/schemas/RegisteredMandate'

    RegisteredMandate:
      type: object
      properties:
        countryMandate:
          type: string
          description: The specific mandate identifier for the country
        countryCode:
          type: string
          description: The country code associated with the mandate
        mandateType:
          type: string
          description: The type of mandate (e.g., 'B2B')
    RegistrationsResponse:
      type: object
      properties:
        recordSetCount:
          type: integer
          description: Total number of registrations
        value:
          type: array
          items:
            $ref: '#/components/schemas/Registration'
    MandatesResponse:
      type: object
      properties:
        mandates:
          type: array
          items:
            $ref: '#/components/schemas/Mandate'

    Mandate:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the mandate
        country:
          type: string
          description: The country associated with the mandate
        description:
          type: string
          description: A brief description of the mandate
        effectiveDate:
          type: string
          format: date
          description: The date when the mandate becomes effective
        documentTypes:
          type: array
          items:
            type: string
          description: List of document types applicable to the mandate

    DataInputFieldsResponse:
      type: object
      properties:
        mandateId:
          type: string
          description: The unique identifier of the mandate
        documentType:
          type: string
          description: The type of document
        version:
          type: string
          description: The version of the document type
        fields:
          type: array
          items:
            $ref: '#/components/schemas/DataInputField'

    DataInputField:
      type: object
      properties:
        name:
          type: string
          description: The name of the data input field
        type:
          type: string
          description: The data type of the field (e.g., 'string', 'number')
        required:
          type: boolean
          description: Indicates if the field is mandatory
        description:
          type: string
          description: A brief description of the field

    Document:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum: ["INVOICE", "CREDIT_NOTE"]
        issueDate:
          type: string
          format: date
        taxDate:
          type: string
          format: date
        currencyCode:
          type: string
        dueDate:
          type: string
          format: date
        amount:
          type: number
        note:
          type: string

        accountingCustomerParty:
          type: object
          properties:
            party:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: object
                  properties:
                    street1:
                      type: string
                    street2:
                      type: string
                    zip:
                      type: string
                    city:
                      type: string
                    country:
                      type: string
            taxScheme:
              type: array
              items:
                type: object
                properties:
                  scheme:
                    type: string
                  id:
                    type: string
                required: ["scheme", "id"]
            legalEntity:
              type: object
              properties:
                id:
                  type: string
                registrationName:
                  type: string
              required: ["id"]
            Contact:
              type: object
              description: Represents the contact details of a company or organization in an e-invoice.
              properties:
                name:
                  type: string
                  description: Full name of the contact person.
                  example: "Lisa Johnson"
                telephone:
                  type: string
                  description: Telephone number of the contact person.
                  example: "23434234"
                electronicMail:
                  type: string
                  format: email
                  description: Email address of the contact person.
                  example: "lj@buyer.se"
          required: ["party", "taxScheme"]
        accountingSupplierParty:
          type: object
          properties:
            party:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: object
                  properties:
                    street1:
                      type: string
                    street2:
                      type: string
                    zip:
                      type: string
                    city:
                      type: string
                    country:
                      type: string
            taxScheme:
              type: array
              items:
                type: object
                properties:
                  scheme:
                    type: string
                  id:
                    type: string
                required: ["scheme", "id"]
            legalEntity:
              type: object
              properties:
                id:
                  type: string
                registrationName:
                  type: string
              required: ["id"]
            Contact:
              type: object
              description: Represents the contact details of a company or organization in an e-invoice.
              properties:
                name:
                  type: string
                  description: Full name of the contact person.
                  example: "Lisa Johnson"
                telephone:
                  type: string
                  description: Telephone number of the contact person.
                  example: "23434234"
                electronicMail:
                  type: string
                  format: email
                  description: Email address of the contact person.
                  example: "lj@buyer.se"
          required: ["party", "taxScheme"]
        lines:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              description:
                type: string
              amount:
                type: number
              quantity:
                type: integer
              name:
                type: string
              standardItemIdentification:
                type: string
              classifiedTaxCategory:
                type: array
                items:
                  type: object
                  properties:
                    percentage:
                      type: number
                    category:
                      type: string
                    country:
                      type: string
                  required: ["percentage", "category", "country"]
            required: ["id", "description", "amount", "quantity", "name", "classifiedTaxCategory"]

        taxTotal:
          type: object
          description: Represents the total tax details for an invoice.
          properties:
            taxAmount:
              type: number
              format: double
            taxSubTotals:
              type: array
              items:
                type: object
                properties:
                  taxableAmount:
                    type: number
                    format: double
                    description: The amount that is subject to tax.
                    example: 10
                  taxAmount:
                    type: number
                    format: double
                    description: The calculated tax amount for the taxable amount.
                    example: 1.4
                  percentage:
                    type: number
                    format: double
                    description: The tax rate percentage applied to the taxable amount.
                    example: 14
                  country:
                    type: string
                    description: The country code where the tax applies.
                    example: "IN"
                  category:
                    type: string
                    description: The category of tax applied (e.g., VAT, SGST, CGST).
                    example: "sgst"
        delivery:
          $ref: '#/components/schemas/Delivery'
        paymentMeans:
          $ref: '#/components/schemas/PaymentMeans'
        paymentTerms:
          $ref: '#/components/schemas/PaymentTerms'

    Delivery:
      type: object
      properties:
        actualDeliveryDate:
          type: string
          format: date
        deliveryLocation:
          $ref: '#/components/schemas/DeliveryLocation'
        deliveryParty:
          $ref: '#/components/schemas/DeliveryParty'

    DeliveryLocation:
      type: object
      properties:
        id:
          type: string
        schemeID:
          type: string
        address:
          $ref: '#/components/schemas/Address'

    Address:
      type: object
      properties:
        streetName:
          type: string
        additionalStreetName:
          type: string
        cityName:
          type: string
        postalZone:
          type: string
        country:
          $ref: '#/components/schemas/Country'

    Country:
      type: object
      properties:
        identificationCode:
          type: string

    DeliveryParty:
      type: object
      properties:
        partyName:
          type: string

    PaymentMeans:
      type: object
      properties:
        paymentMeansCode:
          type: string
        paymentMeansName:
          type: string
        paymentID:
          type: string
        payeeFinancialAccount:
          $ref: '#/components/schemas/PayeeFinancialAccount'

    PayeeFinancialAccount:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        financialInstitutionBranch:
          $ref: '#/components/schemas/FinancialInstitutionBranch'

    FinancialInstitutionBranch:
      type: object
      properties:
        id:
          type: string

    PaymentTerms:
      type: object
      properties:
        note:
          type: string

      required:
        - taxSubtotals
        - Number
        - IssueDate
        - taxDate
        - CurrencyCode
        - amount
        - dueDate
        - documentLines
        - accountingCustomerParty
        - accountingSupplierParty
        - paymentDetails
    DocumentSubmissionResponse:
      type: object
      properties:
        documentId:
          type: string
        status:
          type: string
    DocumentStatus:
      type: object
      properties:
        documentId:
          type: string
          description: "Unique identifier for the document."
        status:
          type: string
          description: "Current status of the document (e.g., 'Pending', 'Processed', 'Rejected')."
        submissionDate:
          type: string
          format: date-time
          description: "Date and time when the document was submitted."
        processingDetails:
          type: object
          properties:
            processedDate:
              type: string
              format: date-time
              description: "Date and time when the document was processed."
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    description: "Error code."
                  message:
                    type: string
                    description: "Detailed error message."
              description: "List of errors encountered during processing, if any."
          description: "Details about the document's processing status."
      required:
        - documentId
        - status
        - submissionDate

    DownloadDocumentResponse:
      type: object
      required:
        - request_id
        - sender
        - receiver
        - documents
        - evidence
        - network
      properties:
        request_id:
          type: string

        documents:
          type: array
          items:
            type: object
            required:
              - mime_type
              - document_url
              - expires_at
            properties:
              mime_type:
                type: string
                example: application/xml
              document_url:
                type: string
                format: uri
                description: Presigned URL to access the document
              expires_at:
                type: string
                format: date-time
                example: 2025-03-28T09:24:29Z
        network:
          type: string
          enum: [peppol]
          example: peppol

    ParticipantsResponse:
      type: object
      properties:
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant'
    Participant:
      type: object
      properties:
        participantId:
          type: string
          description: The unique identifier of the participant
        participantName:
          type: string
          description: The name of the participant
        country:
          type: string
          description: The country where the participant is located
        status:
          type: string
          description: The current status of the participant (e.g., 'Active', 'Inactive')
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: List of identifiers associated with the participant
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
          description: List of addresses associated with the participant
        supportedDocumentTypes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentType'
          description: List of document types supported by the participant

    Identifier:
      type: object
      properties:
        type:
          type: string
          description: The type of identifier (e.g., 'VAT', 'EORI')
        value:
          type: string
          description: The value of the identifier

    DocumentType:
      type: object
      properties:
        type:
          type: string
          description: The type of document (e.g., 'Invoice', 'CreditNote')
        version:
          type: string
          description: The version of the document type
    ErrorDetail:
      type: object
      properties:
        source:
          type: string
          description: The source of the error (e.g. field name)
        details:
          type: string
          description: A human-readable description of the error

    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
        request_id:
          type: string
          description: Unique identifier for tracing the request
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: "X-API-Key"
          
