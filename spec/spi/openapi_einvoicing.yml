openapi: "3.0.0"
info:
  title: "E-Invoicing Service Provider Interface"
  description: >
    ## E-invoicing Service Provider Interface (SPI) — Overview
      Chargebee streamlines e-invoicing compliance across regions by facilitating the following operations throughout the billing lifecycle.
    
    - Retrieve E-invoicing Activations:
        - Retrieves the list of country and network activations that are configured in the connected e-invoicing provider platform.
        - Each activation reflects a country and e-invoicing network that has been set up and made available by the provider.
        - Chargebee uses this operation during provider enablement to determine which activations can be offered to merchants.
    - Document Submission:
       - Submits invoices and credit notes to external e-invoicing systems for validation, compliance processing, and delivery to tax authorities or trading partners.
    - Status Tracking:
       - Tracks the real-time processing status of submitted documents whether accepted, successful, failed, or still in progress.
    - Final Document Retrieval:
       - Retrieves finalized and regulator-approved documents for archiving, auditing or customer-facing use.

    Chargebee leverages external e-invoicing services to execute these operations effectively. These external e-invoicing servies are the  certified vendors offering APIs to handle e-invoicing compliance and document exchange with tax authorities.
    
    
    ## The Role of the E-invoicing Adapter App:
      - To connect with external e-invoicing systems, Chargebee uses an E-invoicing Adapter App — a bridge that enables secure and standardized communication between Chargebee and the e-invoicing system. This communication is governed by the E-invoicing Service Provider Interface (SPI).

    ## Building an E-invoicing Adapter App
      To integrate an e-invoicing system with Chargebee, you must implement the E-invoicing SPI by developing an adapter app. This is required in the following scenarios:
    
      - As an E-invoicing Provider:
        - Connect your compliance platform to Chargebee so merchants can automatically submit billing documents in a regulator-approved format.
      - As a System Integrator:
          description: Build a connector that bridges a third-party e-invoicing provider and Chargebee, enabling seamless integration for merchants.

    By implementing the E-invoicing SPI, you enable Chargebee to support global regulatory compliance through a scalable and region-agnostic architecture.
  version: "1.0.0"
servers:
  - url: "https://api.example.com"
    description: "Production server (replace with actual service URL)"
  - url: "https://sandbox.example.com"
    description: "Sandbox server for testing"
tags:
  - name: "Activations"
    description: "Operations related to e-invoicing activations"
  - name: "Documents"
    description: "Operations related to e-invoicing documents"

security:
  - ApiKeyAuth: []
paths:
  /health:
    $ref: './paths/health.yml'
  /credentials/validate:
    $ref: './paths/credentials.yml'
  /einvoicing/activations:
    get:
      tags: ["Activations"]
      summary: Retrieve a list of Activations.
      description: |
        Retrieves the list of country-level e-invoicing activations supported by the connected e-invoicing provider.
        
        Each activation represents the provider's capability to support e-invoicing in a specific country and network.
        
        This endpoint helps Chargebee determine which countries and e-invoicing networks can be activated for the provider.
        
        In Chargebee, once the E-invoicing Provider SPI app is connected successfully, this endpoint is called during the provider enablement flow for a country to fetch the available activation options.
      operationId: listActivations
      responses:
        '200':
          description: A list of activations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivationsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Unexpected error while processing request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500Response'


  /einvoicing/documents:
    post:
      tags: ["Documents"]
      summary: "Submit a new document (invoice or credit note) to the e-invoicing service."
      description: |
        Submits a new document, such as an invoice or credit note, to the connected e-invoicing provider for validation, compliance checks, and transmission to the relevant tax authorities or business partners.
        
        This endpoint is MANDATORY for enabling document submission through the Chargebee E-invoicing SPI framework.
        
        In Chargebee, this endpoint is called when a new invoice, credit note, or other supported billing document is generated and needs to be processed through the connected e-invoicing provider.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        '200':
          description: "Document submitted successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentSubmissionResponse"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentSubmissionErrorResponse"
        "401":
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Unexpected error while processing request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500Response'
  /webhooks/einvoicing/document-status:
    post:
      tags:
        - "Webhooks"
      summary: "Receive document status updates from the e-invoicing provider"
      description: |
        This webhook endpoint is invoked by the e-invoicing adapter or provider once a document (invoice or credit note) has been processed. 

        The payload includes the unique document identifier and the current processing status such as `SUBMITTED`, `ACCEPTED`, `REJECTED`, or `FAILED`.

        Chargebee consumes this webhook to update the internal document tracking state and trigger downstream workflows (e.g., customer notifications, audit logs).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - documentId
                - status
                - timestamp
              properties:
                documentId:
                  type: string
                  description: Unique identifier of the submitted document.
                status:
                  type: string
                  enum: [SUBMITTED, ACCEPTED, REJECTED, FAILED]
                  description: Current status of the document after processing by the provider.
                message:
                  type: string
                  description: Optional message describing the status result or any error.
                timestamp:
                  type: string
                  format: date-time
                  description: ISO 8601 timestamp indicating when the status was determined.
      responses:
        '200':
          description: Webhook received and acknowledged.
        '400':
          description: Invalid payload or document not recognized.

  /einvoicing/documents/{documentId}/status:
    get:
      tags: ["Documents"]
      summary: "Get Document Status"
      description: |
        Retrieves the current processing status of a document previously submitted to the connected e-invoicing provider.
        
        The status provides insights into whether the document has been successfully processed, is still under validation, has failed, or has been rejected by tax authorities or intermediaries.
        
        In Chargebee, this endpoint is periodically called to retrieve the latest processing status of the e-invoicing document. While Chargebee primarily relies on the webhook listener to receive status updates, this endpoint serves as a fallback mechanism to ensure status synchronization.
      parameters:
        - name: "documentId"
          in: "path"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Document status retrieved successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentStatus"
        "401":
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentNotFoundErrorResponse'
        '500':
          description: Unexpected error while processing request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500Response'
  /einvoicing/documents/{documentId}/download:
    get:
      tags: ["Documents"]
      summary: "Download Document"
      description: |
        Retrieves the document content associated with the provided documentId from the connected e-invoicing provider.
        
        The document may be returned either as a pre-signed URL or as a direct binary stream (such as a PDF or XML file), depending on the provider’s capabilities and the SPI implementation.
        
        In Chargebee, this endpoint is triggered when a merchant chooses to download the issued invoice or related document from the Chargebee UI.
        
        Implementing this endpoint is MANDATORY to support document retrieval operations.
      parameters:
        - name: "documentId"
          in: "path"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Document downloaded successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DownloadDocumentResponse"
        "401":
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentNotFoundErrorResponse'
        '500':
          description: Unexpected error while processing request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500Response'

components:
  schemas:
    Activation:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the activation
        status:
          type: object
          properties:
            code:
              type: string
              description: The status code
              enum:
                - Completed
                - Failed
                - Pending
            message:
              type: string
              description: A message describing the activation status
        company:
          type: object
          properties:
            identifier:
              type: string
              description: The unique identifier for the company
            displayName:
              type: string
              description: The display name of the company
        countryActivations:
          type: array
          items:
            $ref: '#/components/schemas/countryActivation'

    countryActivation:
      type: object
      properties:
        network:
          type: string
          description: The e-invoicing network associated with the activation (e.g., PEPPOL).
        countryCode:
          type: string
          description: ISO 3166-1 alpha-2 country code where the e-invoicing activation is applicable.
        eInvoicingType:
          type: string
          description: Specifies the type of business transaction for which e-invoicing is applied.
          enum:
            - B2B
            - B2C
            - B2G
    ActivationsResponse:
      type: object
      properties:
        activations:
          type: array
          items:
            $ref: '#/components/schemas/Activation'
      example:
        activations:
          - id: reg-123456789
            status:
              code: Completed
              message: Activation completed successfully.
            company:
              identifier: DE123456789
              displayName: Acme GmbH
            countryActivations:
              - network: PEPPOL
                countryCode: DE
                einvoicingType: B2B
    Document:
      type: object
      properties:
        id:
          type: string
          description: A Unique identifier of the document.
        type:
          type: string
          enum: ["INVOICE", "CREDIT_NOTE"]
          description: Type of document, either an invoice or a credit note.
        issueDate:
          type: string
          format: date
          description: The date when the Document was issued. Format "YYYY-MM-DD"
        taxDate:
          type: string
          format: date
          description: The date used for determining tax. Format "YYYY-MM-DD"
        currencyCode:
          type: string
          description: The currency code (ISO 4217 format) for the document.
        dueDate:
          type: string
          format: date
          description: The date when the payment is due. Format "YYYY-MM-DD".
        amount:
          type: number
          description: Total payable amount for the document, including taxes.
        note:
          type: string
          description: A textual note that gives unstructured information that is relevant to the Document as a whole. Such as the reason for any correction or assignment note in case the document has been factored.
        billing_reference:
          type: array
          description: A group of business terms providing information on one or more preceding Invoices.
          items:
            type: object
            properties:
              invoice_document_reference:
                type: object
                description: A group of business terms providing information on one or more preceding Invoices.
                properties:
                  id:
                    type: string
                    description: Identifier of the referenced invoice.
                  issue_date:
                    type: string
                    format: date
                    description: Issue date of the referenced invoice.
                required:
                  - id
          required:
            - invoice_document_reference

        accountingSupplierParty:
          type: object
          description: Party responsible for issuing the document (i.e., the supplier).
          properties:
            name:
              type: string
              description: Name of the supplier party.
            address:
              description: Address of the Supplier party.
              $ref: '#/components/schemas/Address'
            taxScheme:
              type: array
              description: List of tax identifiers associated with the supplier.
              items:
                $ref: '#/components/schemas/TaxScheme'
            legalEntity:
              description: Legal entity of the supplier party.
              $ref: '#/components/schemas/PartyLegalEntity'
          required: ["address", taxScheme, legalEntity]
        accountingCustomerParty:
          type: object
          description: Party responsible for receiving the invoice (i.e., the customer).
          properties:
            name:
              type: string
              description: Name of the customer party.
            address:
              description: Address of the customer party.
              $ref: '#/components/schemas/Address'
            taxScheme:
              type: array
              description: List of tax identifiers associated.
              items:
                $ref: '#/components/schemas/TaxScheme'
            legalEntity:
              description: Legal entity of the customer party.
              $ref: '#/components/schemas/PartyLegalEntity'
          required: ["address", taxScheme, legalEntity]
        paymentMeans:
          type: object
          description: Defines the method and details for payment.
          $ref: '#/components/schemas/PaymentMeans'
        lines:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: A unique identifier for the individual line within the document.
              description:
                type: string
                description: A textual note that gives unstructured information that is relevant to the document.
              quantity:
                type: integer
                description: The quantity of items (goods or services) that is charged.
              unitPrice:
                type: number
                description: The unit price for this line.
              amount:
                type: number
                description: The total amount of the line without tax.
              discount:
                type: number
                description: The discount applied to the line.
              itemCode:
                type: string
                description: The unique identifier (in Chargebee) of the product corresponding to the line.
              classifiedTaxCategory:
                type: array
                description: List of tax categories applicable to the invoice line, such as VAT or other indirect taxes.
                items:
                  type: object
                  properties:
                    percentage:
                      type: number
                      description: The tax rate percentage applicable to this tax category (e.g., 19 for 19% VAT).
                    category:
                      type: string
                      description: A code or label identifying the type of tax category.
                    country:
                      type: string
                      description: The ISO 3166-1 alpha-2 country code where the tax category is applicable (e.g., DE for Germany).
            required: ["id", "description", "amount", "quantity", "name", "classifiedTaxCategory"]

        taxTotal:
          type: object
          description: Represents the total tax details for the document.
          properties:
            taxAmount:
              type: number
              description: The total tax amount for the document.
              format: double
            taxSubTotals:
              type: array
              items:
                type: object
                properties:
                  taxableAmount:
                    type: number
                    format: double
                    description: Total taxable amount for the category.
                  taxAmount:
                    type: number
                    format: double
                    description: Total Tax amount for the category
                  percentage:
                    type: number
                    format: double
                    description: The tax rate percentage applied to the taxable amount.
                  country:
                    type: string
                    description: The country code where the tax applies.
                  category:
                    type: string
                    description: The category of tax applied (e.g., VAT).
      example:
        id: INV-10001
        type: INVOICE
        issueDate: 2025-04-02
        taxDate: 2025-04-02
        currencyCode: EUR
        dueDate: 2025-04-30
        amount: 114.00
        note: Payment due in 28 days.
        accountingCustomerParty:
          party:
            name: Example Buyer GmbH
            address:
              street1: Berliner Str. 123
              street2: 2nd Floor
              zip: "10115"
              city: Berlin
              country: DE
          taxScheme:
            - scheme: VAT
              id: DE123456789
        accountingSupplierParty:
          party:
            name: Example Seller GmbH
            address:
              street1: Hauptstr. 456
              street2: Suite 5
              zip: "50667"
              city: Cologne
              country: DE
          taxScheme:
            - scheme: VAT
              id: DE987654321
        paymentMeans:
          code: ONLINE_PAYMENT_SERVICE
          paymentID: "PAY-2024-00987"
          cardAccount:
            primaryAccountNumberID: "4111********1111"
            cardHolderName: "Jane Smith"
            networkID: "MASTERCARD"
        lines:
          - id: "1"
            description: Consulting Services - April
            amount: 100.00
            quantity: 1
            name: Consulting
            standardItemIdentification: CONS-APRIL
            classifiedTaxCategory:
              - percentage: 14
                category: VAT
                country: DE
        taxTotal:
          taxAmount: 14.00
          taxSubTotals:
            - taxableAmount: 100.00
              taxAmount: 14.00
              percentage: 14
              country: DE
              category: VAT

      required:
        - id
        - type
        - issueDate
        - taxDate
        - currencyCode
        - amount
        - dueDate
        - lines
        - accountingCustomerParty
        - accountingSupplierParty
        - taxTotal
    PaymentMeans:
      type: object
      description: Defines the method and details for payment.
      properties:
        code:
          type: string
          description: The means, expressed as code, for how a payment is expected to be or has been settled.
          enum:
            - CREDIT_TRANSFER
            - ONLINE_PAYMENT_SERVICE
            - DIRECT_DEBIT
        paymentID:
          type: string
          description: A textual value used to establish a link between the payment and the Invoice, issued by the Seller. Used for creditor's critical reconciliation information. This information element helps the Seller to assign an incoming payment to the relevant payment process.
        payeeFinancialAccount:
          type: object
          description: A group of business terms to specify credit transfer payments.
          properties:
            id:
              type: string
              description: A unique identifier of the financial payment account, at a payment service provider, to which payment should be made. Such as IBAN or BBAN (e.g., IBAN).
          required:
            - id
        paymentMandate:
          type: object
          description: A group of business terms to specify a direct debit.
          properties:
            id:
              type: string
              description: Unique identifier assigned by the Payee for referencing the direct debit mandate.
            mandateType:
              type: string
              description: Type of mandate (e.g., SEPA, national DD agreement).
        cardAccount:
          type: object
          description: A group of business terms providing information about card used for payment contemporaneous with invoice issuance.
          properties:
            primaryAccountNumberID:
              type: string
              description: The Primary Account Number (PAN) of the card used for payment.
            cardHolderName:
              type: string
              description: The name of the payment card holder.
            networkID:
              type: string
              description: The identifier of the card network. (e.g., VISA, MasterCard).
    DocumentSubmissionResponse:
      type: object
      properties:
        document_id:
          type: string
          description: The unique identifier assigned to the document by the e-invoicing provider. This identifier must be used for subsequent operations such as retrieving the document status and downloading the document.
        status:
          type: string
          description: The current status of the submitted document.
          enum:
            - ACCEPTED
            - FAILED
            - SUCCESS
        request_id:
          type: string
          description: A unique identifier assigned to the request for tracking and correlation purposes across systems and logs.
      required:
        - document_id
        - status
      example:
        document_id: DOC-20250402-0002
        status: PENDING
        request_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6

    DocumentStatus:
      type: object
      properties:
        document_id:
          type: string
          description: "Unique identifier for the document submitted."
        status:
          type: string
          description: "The current status of the document submission."
          enum:
            - ACCEPTED
            - FAILED
            - SUCCESS
        submission_date:
          type: string
          format: date-time
          description: "Date and time when the document was submitted."
        processing_details:
          type: object
          $ref: "#/components/schemas/DocumentSubmissionErrorResponse"
      example:
        document_id: DOC-20250402-0001
        status: Success
        submission_date: 2025-04-02T07:39:31.815Z
      required:
        - document_id
        - status

    DownloadDocumentResponse:
      type: object
      required:
        - request_id
        - documents
        - evidence
        - network
      properties:
        request_id:
          type: string
        documents:
          type: array
          items:
            type: object
            required:
              - mime_type
            properties:
              mime_type:
                type: string
                description: The MIME type of the document.
                enum:
                  - application/xml
                  - application/pdf
              document_url:
                type: string
                format: uri
                description: Presigned URL to access the document. This param will be preferred if found over document_content.
              document_content:
                type: string
                format: byte
                description: Base64-encoded document content if URL is not available.
              expires_at:
                type: string
                format: date-time
                description: The time until which the document url is valid.
                example: 2025-03-28T09:24:29Z
        network:
          type: string
          enum: [peppol]
      example:
        request_id: "a3d56940-2827-4b87-a229-00d8b95cbe77"
        documents:
          - mime_type: "application/xml"
            document_url: "https://provider.com/downloads/invoice-20250402.xml"
            expires_at: "2025-03-28T09:24:29Z"
        network: peppol
    DocumentSubmissionErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                description: The error codes classify the type of exception that occurred during processing the request.
                enum:
                  - INVALID_OPERATION
                  - SERVICE_EXCEPTION
                  - SERVICE_UNAVAILABLE
                  - SERVICE_LIMIT_EXCEEDED
                  - MISSING_REQUIRED_DATA
                  - INVALID_DATA
              message:
                type: string
                description: A short message describing the reason for the error.
              help_url:
                type: string
                format: uri
                description: The link to the documentation for more information about the error and the corrective action.
            required:
              - code
              - message
      example:
        errors:
          - code: MISSING_REQUIRED_DATA
            message: The request did not contain a required property 'taxAmount'
            help_url: https://docs.example.com/errors#MISSING_REQUIRED_PARAMETER
    DocumentNotFoundErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                description: Application-specific error code
                enum:
                  - INVALID_OPERATION
              message:
                type: string
                description: A short message describing the reason for the error.
              help_url:
                type: string
                format: uri
                description: The link to the documentation for more information about the error and the corrective action.
            required:
              - code
              - message
      example:
        errors:
          - code: INVALID_OPERATION
            message: The requested document is not found.
            help_url: https://docs.example.com/errors#INVALID_OPERATION
    Address:
      type: object
      properties:
        line1:
          type: string
          description: First line of the address.
        line2:
          type: string
          description: Second line of the address.
        line3:
          type: string
          description: Third line of the address.
        zip:
          type: string
          description: Postal or ZIP code.
        city:
          type: string
          description: City name.
        division:
          type: string
          description: Division name.
        country:
          type: string
          description: ISO 3166-1 alpha-2 country code.
    TaxScheme:
      type: object
      properties:
        scheme:
          type: string
          description: Name or type of the tax scheme (e.g., Germany VAT Number).
        id:
          type: string
          description: The identification scheme identifier of the party electronic address.
      required:
        - scheme
        - id
    PartyLegalEntity:
      type: object
      description: Legal entity information of the party.
      properties:
        registrationName:
          type: string
          description: The full formal name by which the party is registered.
        companyID:
          type: string
          description: An identifier issued by an official registrar that identifies the party as a legal entity or person.
      required:
        - registrationName
    Error500Response:
      description: An unexpected error occurred while processing your request.
      properties:
        message:
          type: string
          description: A human-readable description of the unexpected error encountered.
          example: "An unexpected error occurred while processing your request."
      required:
        - message
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: "X-API-Key"

