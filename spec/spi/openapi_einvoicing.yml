openapi: 3.0.0
info:
  title: E-Invoicing Service Provider Interface
  description: >
    ## E-invoicing Service Provider Interface (SPI) - Overview
      Chargebee streamlines e-invoicing compliance across regions by facilitating the following operations throughout the billing lifecycle.
    
    - Retrieve E-invoicing Activations:
        - Retrieves the list of country and network activations that are configured in the connected e-invoicing provider platform.
        - Each activation reflects a country and e-invoicing network that has been set up and made available by the provider.
        - Chargebee uses this operation during provider enablement to determine which activations can be offered to merchants.
    - Document Submission:
        - Submits invoices and credit notes to external e-invoicing systems for validation, compliance processing, and delivery to tax authorities or trading partners.
    - Status Tracking:
        - Supports asynchronous document lifecycle tracking through webhook notifications sent by the e-invoicing adapter. These updates reflect real-time status changes as documents move through validation, compliance, and regulatory delivery stages.
        - Allows on-demand status checks to retrieve the latest processing state of submitted documents, ensuring continued visibility even if webhook delivery is delayed or disrupted.
    - Final Document Retrieval:
        - Retrieves finalized and regulator-approved documents for archiving, auditing or customer-facing use.

    Chargebee leverages external e-invoicing services to execute these operations effectively. These external e-invoicing servies are the  certified vendors offering APIs to handle e-invoicing compliance and document exchange with tax authorities.
    
    
    ## The Role of the E-invoicing Adapter App:
      To connect with external e-invoicing systems, Chargebee uses an E-invoicing Adapter App -  a bridge that enables secure and standardized communication between Chargebee and the e-invoicing system. This communication is governed by the E-invoicing Service Provider Interface (SPI).

    ## Building an E-invoicing Adapter App
      To integrate an e-invoicing system with Chargebee, you must implement the E-invoicing SPI by developing an adapter app. This is required in the following scenarios:
    
      - As an E-invoicing Provider:
        - Connect your compliance platform to Chargebee so merchants can automatically submit billing documents in a regulator-approved format.
      - As a System Integrator:
        - Build a connector that bridges a third-party e-invoicing provider and Chargebee, enabling seamless integration for merchants.

    By implementing the E-invoicing SPI, you enable Chargebee to support global regulatory compliance through a scalable and region-agnostic architecture.
  version: "1.0.0"
servers:
  - url: https://api.example.com
    description: Production server (replace with actual service URL)
  - url: https://sandbox.example.com
    description: Sandbox server for testing
tags:
  - name: Activations
    description: Operations related to e-invoicing activations
  - name: Documents
    description: Operations related to e-invoicing documents
security:
  - ApiKeyAuth: []
paths:
  /credentials/validate:
    $ref: ./paths/credentials.yml
  /einvoicing/activations:
    get:
      tags:
        - Activations
      summary: Retrieve a list of Activations.
      description: |
        Retrieves the list of country-level e-invoicing activations supported by the connected e-invoicing provider.

        Each activation represents the provider's capability to support e-invoicing in a specific country and network.

        Implementation of this endpoint is recommended only if the e-invoicing provider exposes an API to retrieve activations for a specific country.

        This endpoint enables Chargebee to identify the countries and e-invoicing networks that are currently available for activation on the provider’s platform.

        Within Chargebee, the endpoint is invoked during the provider configuration workflow for a selected country. It retrieves information about activations that are either already set up or currently in progress. This helps users assess which e-invoicing capabilities are available for use or require further setup.
      operationId: listActivations
      responses:
        '200':
          description: A list of activations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activations_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Unexpected error while processing request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500_error_response'
  /einvoicing/data_input_fields:
    get:
      tags:
        - Activations
      summary: Retrieves input fields for e-invoicing, based on the specified countries, networks, and transaction types.
      description: |
        This optional SPI endpoint is used to retrieve the required and optional input fields for various e-invoicing scenarios supported by the provider. Each scenario is defined by a unique combination of country, e-invoicing network, and transaction type (B2B, B2C, or B2G).
        
        Implementation of this endpoint is recommended only if the e-invoicing provider requires merchant to configure field mappings themselves, rather than relying on predefined mappings managed by the provider or Chargebee.
        
        Within Chargebee, this endpoint is invoked during the e-invoicing setup workflow, when a user maps fields between the provider’s schema and Chargebee’s internal data model for a specific combination of country, network, and transaction type. Once this configuration is complete, the resulting field mappings are included in the document submission request and passed to the adapter via the field_mapping parameter, enabling the adapter to transform the SPI-compliant payload into the provider’s required format.
      operationId: getDataInputFields
      parameters:
        - name: country_code
          in: query
          required: true
          description: |
            The ISO 3166-1 alpha-2 country code representing the country for which the e-invoicing data input fields need to be retrieved. Different countries may have varying e-invoicing requirements.
          schema:
            type: string
            example: "DE"

        - name: transaction_type
          in: query
          required: true
          description: >
            The transaction type for which the data input fields need to be retrieved. Required fields may vary depending on the type: B2B (Business to Business), B2C (Business to Consumer), or B2G (Business to Government).
          schema:
            type: string
            enum: [B2B, B2C, B2G]
            example: "B2B"
        - name: network
          in: query
          required: true
          description: |
            The e-invoicing network or standard for which the data input fields need to be retrieved. This specifies the system or protocol used for invoice submission, such as PEPPOL, ZUGFeRD, Chorus Pro, or other country-specific standards.
          schema:
            type: string
            enum:
              - PEPPOL
              - ZUGFeRD
            example: "PEPPOL"
      responses:
        '200':
          description: Successfully retrieved the input fields for the given scenario.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/data_input_fields_response'
        '400':
          description: Bad Request – The request is malformed or missing required parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_error_response'
              example:
                error_code: "INVALID_REQUEST"
                message: "Missing required query parameters."
        '401':
          description: Unauthorized
        '404':
          description: Not Found – The requested country or network does not exist or is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/not_found_error_response'
              example:
                error_code: "NOT_FOUND"
                message: "No data input fields were found for the specified country, network, and transaction type."
        '500':
          description: Internal Server Error – An error occurred on the server.
  /einvoicing/documents:
    post:
      tags:
        - Documents
      summary: Submit a new document (invoice or credit note) to the e-invoicing service.
      description: |
        Submits a new document, such as an invoice or credit note, to the connected e-invoicing provider for validation, compliance checks, and delivery to the appropriate tax authorities or business partners.
        
        This endpoint is MANDATORY for enabling document submission through the Chargebee E-invoicing SPI framework.
        
        Within Chargebee, this endpoint is invoked asynchronously by an internal background job whenever a new invoice, credit note, or other supported billing document is generated and requires processing through the configured e-invoicing provider.
        
        If the e-invoicing provider requires the merchant to configure field mappings manually, instead of relying on predefined mappings managed by the provider or Chargebee, Chargebee will allow the merchant to complete this configuration within the application. The resulting field mappings will then be sent to the adapter as part of the `field_mapping` parameter during document submission.
      operationId: einvoicingDocumentSubmission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/document'
            examples:
              invoice_document_submission_success:
                $ref: '#/components/examples/invoice_document_submission_success'
              invoice_document_submission_with_field_mapping_success:
                $ref: '#/components/examples/invoice_document_submission_with_field_mapping_success'
              credit_note_document_submission_success:
                $ref: '#/components/examples/credit_note_document_submission_success'
              credit_note_document_submission_with_field_mapping_success:
                $ref: '#/components/examples/credit_note_document_submission_with_field_mapping_success'
      responses:
        '200':
          description: Document submitted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/document_submission_response'
              examples:
                einvoice_document_submission_pending:
                  $ref: '#/components/examples/einvoice_document_submission_pending'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bad_request_error_response'
              examples:
                einvoice_document_submission_failed:
                  $ref: '#/components/examples/einvoice_document_submission_failed'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Unexpected error while processing request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500_error_response'
  /webhooks/einvoicing/{einvoicing_provider_id}/document_status:
    post:
      tags:
        - Webhooks
      summary: Receive document status updates from the e-invoicing provider
      description: |
        This endpoint is invoked by the e-invoicing adapter once a document such as an invoice or credit note has been processed by the e-invoicing provider.

        The adapter receives the webhook from the provider, transforms the payload into Chargebee’s standardized schema, and forwards the final document status to this endpoint.

        Chargebee uses this information to update its internal document tracking state and trigger downstream workflows, such as customer notifications or audit logs.

        This endpoint is idempotent. Repeated submissions with the same document ID and status will not result in duplicate processing.

        This endpoint requires an OAuth 2.0 access token. The Chargebee merchant must authorize the e-invoicing adapter via the OAuth flow to allow it to make authenticated POST calls to this endpoint.
      parameters:
        - name: einvoicing_provider_id
          in: path
          required: true
          schema:
            type: string
      operationId: einvoicingDocumentStatusWebhook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook_document_status'
            examples:
              webhook_document_status_success:
                $ref: '#/components/examples/webhook_document_status_success'
              webhook_document_status_failed:
                $ref: '#/components/examples/webhook_document_status_failed'
      responses:
        '200':
          description: Webhook payload received and validated successfully. No retry required.
        '202':
          description: Webhook accepted for asynchronous processing.
        '400':
          description: Invalid payload or required fields missing.
        '401':
          description: Unauthorized request. Signature validation failed or sender is not allowed.
        '422':
          description: Payload was well-formed but could not be processed (e.g., unknown document ID).
        '500':
          description: Internal server error. Retry may be attempted by the sender.
  /einvoicing/documents/{document_id}/status:
    get:
      tags:
        - Documents
      summary: Get Document Status
      description: >
        Retrieves the current processing status of a document previously
        submitted to the connected e-invoicing provider.


        The status provides insights into whether the document has been successfully
        processed, is still under validation, has failed, or has been rejected by
        tax authorities or intermediaries.


        In Chargebee, this endpoint is periodically called to retrieve the latest
        processing status of the e-invoicing document. While Chargebee primarily relies
        on the webhook listener to receive status updates, this endpoint serves as
        a fallback mechanism to ensure status synchronization.

        '
      operationId: einvoicingDocumentStatus
      parameters:
        - name: document_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Document status retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/document_status'
              examples:
                successful_einvoice_document_submission_response:
                  $ref: '#/components/examples/successful_einvoice_document_submission_response'
                failed_einvoice_document_submission_response:
                  $ref: '#/components/examples/failed_einvoice_document_submission_response'

        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/not_found_error_response'
        '500':
          description: Unexpected error while processing request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500_error_response'
  /einvoicing/documents/{document_id}/download:
    get:
      tags:
        - Documents
      summary: Download Document
      description: |
        Retrieves the document content associated with the provided documentId from the connected e-invoicing provider.
        
        The document may be returned either as a pre-signed URL or as a direct binary stream (such as a PDF or XML file), depending on the provider’s capabilities and the SPI implementation.
        
        In Chargebee, this endpoint is called after the document has been successfully processed either to send it via email to the end customer or when the merchant initiates a download from the Chargebee UI.
        
        Implementing this endpoint is MANDATORY to support document retrieval operations.
      operationId: einvoicingDocumentDownload
      parameters:
        - name: document_id
          in: path
          required: true
          schema:
            type: string
        - name: request_id
          in: query
          required: true
          schema:
            type: string
            description: The unique identifier of the document to be downloaded.
      responses:
        '200':
          description: Document downloaded successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/download_document_response'
              examples:
                einvoice_document_download_url_response:
                  $ref: '#/components/examples/einvoice_document_download_url_response'
                einvoice_document_download_stream_response:
                  $ref: '#/components/examples/einvoice_document_download_stream_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/not_found_error_response'
        '500':
          description: Unexpected error while processing request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500_error_response'
  /health:
    $ref: ./paths/health.yml
components:
  schemas:
    activation:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the activation
        status:
          type: object
          properties:
            code:
              type: string
              description: The status code of the activation.
              enum:
                - COMPLETED
                - FAILED
                - PENDING
            message:
              type: string
              description: A detailed message describing the activation status.
        company:
          type: object
          properties:
            identifier:
              type: string
              description: The unique identifier for the company
            display_name:
              type: string
              description: The display name of the company
        country_activations:
          type: array
          items:
            $ref: '#/components/schemas/country_activation'
    country_activation:
      type: object
      properties:
        network:
          type: string
          enum:
            - PEPPOL
            - ZUGFeRD
          example: "PEPPOL"
        country_code:
          type: string
          description: ISO 3166-1 alpha-2 country code where the e-invoicing activation
            is applicable.
        einvoicing_type:
          type: string
          description: Specifies the type of business transaction for which e-invoicing
            is applied.
          enum:
            - B2B
            - B2C
            - B2G
    activations_response:
      type: object
      properties:
        activations:
          type: array
          items:
            $ref: '#/components/schemas/activation'
      example:
        activations:
          - id: reg-123456789
            status:
              code: Completed
              message: Activation completed successfully.
            company:
              identifier: DE123456789
              display_name: Acme GmbH
            country_activations:
              - network: PEPPOL
                country_code: DE
                einvoicing_type: B2B
    data_input_fields_response:
      type: object
      properties:
        country_code:
          type: string
          description: The ISO country code for the scenario.
          example: "DE"
        transaction_type:
          type: string
          description: The type of transaction (B2B, B2C, B2G).
          enum: [B2B, B2C, B2G]
          example: "B2B"
        network:
          type: string
          description: The e-invoicing network used for the transaction.
          example: "PEPPOL"
        required_fields:
          type: array
          description: The list of required fields for the e-invoicing mandate.
          items:
            type: object
            properties:
              field_name:
                type: string
                description: The name of the required field.
                example: "InvoiceNumber"
              description:
                type: string
                description: A description of the field.
                example: "The unique number for the invoice."
              type:
                type: string
                description: The data type of the field.
                example: "string"
              sub_fields:
                type: array
                description: Sub-fields for nested fields.
                items:
                  type: object
                  properties:
                    field_name:
                      type: string
                      example: "AccountingSupplierParty.PostalAddress.StreetLine1"
                    description:
                      type: string
                      example: "The first line of the street address."
                    type:
                      type: string
                      example: "string"
                    mandatory:
                      type: boolean
                      example: true
        optional_fields:
          type: array
          description: The list of optional fields for the e-invoicing mandate.
          items:
            type: object
            properties:
              field_name:
                type: string
                description: The name of the optional field.
                example: "DiscountAmount"
              description:
                type: string
                description: A description of the field.
                example: "The discount applied to the invoice."
              type:
                type: string
                description: The data type of the field.
                example: "decimal"
              sub_fields:
                type: array
                description: Sub-fields for nested optional fields.
                items:
                  type: object
                  properties:
                    field_name:
                      type: string
                      example: "AccountingSupplierParty.PostalAddress.StreetLine1"
                    description:
                      type: string
                      example: "The first line of the street address."
                    type:
                      type: string
                      example: "string"
                    mandatory:
                      type: boolean
                      example: true
    document:
      type: object
      properties:
        id:
          type: string
          description: A Unique identifier of the document.
        type:
          type: string
          enum:
            - INVOICE
            - CREDIT_NOTE
          description: Type of document, either an invoice or a credit note.
        issue_date:
          type: string
          format: date
          description: The date when the document was issued. Format "YYYY-MM-DD"
        tax_date:
          type: string
          format: date
          description: The date used to determine tax. Format "YYYY-MM-DD"
        currency_code:
          type: string
          description: The currency code [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217) for the document.
        due_date:
          type: string
          format: date
          description: The date when the payment is due. Format "YYYY-MM-DD".
        amount:
          type: number
          description: Total payable amount for the document, including taxes.
        note:
          type: string
          description: A textual note that gives unstructured information that is
            relevant to the Document as a whole. Such as the reason for any correction
            or assignment note in case the document has been factored.
        billing_reference:
          type: array
          description: A group of business terms providing information on one or more
            preceding Invoices.
          items:
            type: object
            properties:
              invoice_document_reference:
                type: object
                description: A group of business terms providing information on one
                  or more preceding Invoices.
                properties:
                  id:
                    type: string
                    description: Identifier of the referenced invoice.
                  issue_date:
                    type: string
                    format: date
                    description: Issue date of the referenced invoice.
                required:
                  - id
          required:
            - invoice_document_reference
        accounting_supplier_party:
          type: object
          description: Party responsible for issuing the document (i.e., the supplier).
          properties:
            name:
              type: string
              description: Name of the supplier party.
            address:
              description: Address of the Supplier party.
              $ref: '#/components/schemas/address'
            tax_scheme:
              type: array
              description: List of tax identifiers associated with the supplier.
              items:
                $ref: '#/components/schemas/tax_scheme'
            legal_entity:
              description: Legal entity of the supplier party.
              $ref: '#/components/schemas/party_legal_entity'
          required:
            - address
            - taxScheme
            - legalEntity
        accounting_customer_party:
          type: object
          description: Party responsible for receiving the invoice (i.e., the customer).
          properties:
            name:
              type: string
              description: Name of the customer party.
            address:
              description: Address of the customer party.
              $ref: '#/components/schemas/address'
            tax_scheme:
              type: array
              description: List of tax identifiers associated.
              items:
                $ref: '#/components/schemas/tax_scheme'
            legal_entity:
              description: Legal entity of the customer party.
              $ref: '#/components/schemas/party_legal_entity'
          required:
            - address
            - taxScheme
            - legalEntity
        payment_means:
          type: array
          description: A list of payment methods with corresponding payment details.
          items:
            $ref: '#/components/schemas/payment_means'
        lines:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: A unique identifier for the individual line within the
                  document.
              description:
                type: string
                description: A textual note that gives unstructured information that
                  is relevant to the document.
              quantity:
                type: integer
                description: The quantity of items (goods or services) that is charged.
              unit_price:
                type: number
                description: The unit price for this line.
              amount:
                type: number
                description: The total amount of the line without tax.
              discount:
                type: number
                description: The discount applied to the line.
              item_code:
                type: string
                description: The unique identifier (in Chargebee) of the product corresponding
                  to the line.
              classified_tax_category:
                type: array
                description: List of tax categories applicable to the invoice line,
                  such as VAT or other indirect taxes.
                items:
                  type: object
                  properties:
                    percentage:
                      type: number
                      description: The tax rate percentage applicable to this tax
                        category (e.g., 19 for 19% VAT).
                    category:
                      type: string
                      description: A code or label identifying the type of tax category.
                    country:
                      type: string
                      description: The ISO 3166-1 alpha-2 country code where the tax
                        category is applicable (e.g., DE for Germany).
            required:
              - id
              - description
              - amount
              - quantity
              - name
              - classifiedTaxCategory
        tax_total:
          type: object
          description: Represents the total tax details for the document.
          properties:
            tax_amount:
              type: number
              description: The total tax amount for the document.
              format: double
            tax_sub_totals:
              type: array
              items:
                type: object
                properties:
                  taxable_amount:
                    type: number
                    format: double
                    description: Total taxable amount for the category.
                  tax_amount:
                    type: number
                    format: double
                    description: Total Tax amount for the category
                  percentage:
                    type: number
                    format: double
                    description: The tax rate percentage applied to the taxable amount.
                  country:
                    type: string
                    description: The country code where the tax applies.
                  category:
                    type: string
                    description: The category of tax applied (e.g., VAT).

        field_mapping:
          type: object
          description: |
            A key-value mapping that defines how fields in the Chargebee SPI document submission model should be translated
            to the target schema expected by the e-invoicing provider (e.g., PEPPOL BIS, FatturaPA, CFDI, or any custom XML/JSON-based format).

            - **Keys** represent field paths or attribute identifiers from the target schema (e.g., `Invoice.ID`, `Invoice.Supplier.EndpointID`, or `cbc:DocumentCurrencyCode`)
            - **Values** are dot-path expressions that reference fields from the Chargebee SPI `document` model (e.g., `document.id`, `document.lines[].unit_price`)

            The adapter uses this mapping to transform Chargebee’s SPI payload into the structure required by the configured provider
            during submission.

            This field enables dynamic, tenant-configured transformation without hardcoding provider-specific logic in the adapter.


            This field is **mandatory** for providers that requires merchant to configure field mappings themselves, rather than relying on predefined mappings managed by the provider or Chargebee.
          additionalProperties:
            type: string
      required:
        - id
        - type
        - issueDate
        - taxDate
        - currencyCode
        - amount
        - dueDate
        - lines
        - accountingCustomerParty
        - accountingSupplierParty
        - taxTotal

    payment_means:
      type: object
      description: Defines the method and details for payment.
      properties:
        code:
          type: string
          description: The means, expressed as code, for how a payment is expected
            to be or has been settled.
          enum:
            - CREDIT_TRANSFER
            - ONLINE_PAYMENT_SERVICE
            - DIRECT_DEBIT
        payment_id:
          type: string
          description: A textual value used to establish a link between the payment
            and the Invoice, issued by the Seller. Used for creditor's critical reconciliation
            information. This information element helps the Seller to assign an incoming
            payment to the relevant payment process.
        payee_financial_account:
          type: object
          description: A group of business terms to specify credit transfer payments.
          properties:
            id:
              type: string
              description: A unique identifier of the financial payment account, at
                a payment service provider, to which payment should be made. Such
                as IBAN or BBAN (e.g., IBAN).
          required:
            - id
        payment_mandate:
          type: object
          description: A group of business terms to specify a direct debit.
          properties:
            id:
              type: string
              description: Unique identifier assigned by the Payee for referencing
                the direct debit mandate.
            mandate_type:
              type: string
              description: Type of mandate (e.g., SEPA, national DD agreement).
        card_account:
          type: object
          description: A group of business terms providing information about card
            used for payment contemporaneous with invoice issuance.
          properties:
            primary_account_number_i_d:
              type: string
              description: The Primary Account Number (PAN) of the card used for payment.
            card_holder_name:
              type: string
              description: The name of the payment card holder.
            network_id:
              type: string
              description: The identifier of the card network. (e.g., VISA, MasterCard).
    document_submission_response:
      type: object
      properties:
        document_id:
          type: string
          description: The unique identifier assigned to the document by the e-invoicing
            provider. This identifier must be used for subsequent operations such
            as retrieving the document status and downloading the document.
        status:
          type: string
          description: The current status of the submitted document.
          enum:
            - ACCEPTED
            - FAILED
            - SUCCESS
        request_id:
          type: string
          description: A unique identifier assigned to the request for tracking and
            correlation purposes across systems and logs.
      required:
        - document_id
        - status
    document_status:
      type: object
      properties:
        document_id:
          type: string
          description: Unique identifier for the document submitted.
        status:
          type: string
          description: The current status of the document submission.
          enum:
            - ACCEPTED
            - FAILED
            - SUCCESS
        submission_date:
          type: string
          format: date-time
          description: Date and time when the document was submitted.
        processing_details:
          $ref: '#/components/schemas/bad_request_error_response'
      example:
        document_id: DOC-20250402-0001
        status: Success
        submission_date: 2025-04-02T07:39:31.815Z
      required:
        - document_id
        - status
    download_document_response:
      type: object
      required:
        - document_id
        - request_id
        - documents
        - evidence
        - network
      properties:
        document_id:
          type: string
        request_id:
          type: string
        documents:
          type: array
          items:
            type: object
            required:
              - mime_type
            properties:
              mime_type:
                type: string
                description: The MIME type of the document.
                enum:
                  - application/xml
                  - application/pdf
              document_url:
                type: string
                format: uri
                description: Presigned URL to access the document. This param will
                  be preferred if found over document_content.
              document_content:
                type: string
                format: byte
                description: Base64-encoded document content if URL is not available.
              expires_at:
                type: string
                format: date-time
                description: The time until which the document URL is valid.
                example: 2025-03-28T09:24:29Z
              network:
                type: string
                enum:
                  - PEPPOL
                  - ZUGFeRD
            example: "PEPPOL"
      example:
        request_id: a3d56940-2827-4b87-a229-00d8b95cbe77
        documents:
          - mime_type: application/xml
            document_url: https://provider.com/downloads/invoice-20250402.xml
            expires_at: '2025-03-28T09:24:29Z'
        network: peppol
    bad_request_error_response:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                description: The error codes classify the type of exception that occurred
                  during processing the request.
                enum:
                  - INVALID_OPERATION
                  - SERVICE_EXCEPTION
                  - SERVICE_UNAVAILABLE
                  - SERVICE_LIMIT_EXCEEDED
                  - MISSING_REQUIRED_DATA
                  - INVALID_DATA
              message:
                type: string
                description: A short message describing the reason for the error.
              help_url:
                type: string
                format: uri
                description: The link to the documentation for more information about
                  the error and the corrective action.
            required:
              - code
              - message
      example:
        errors:
          - code: MISSING_REQUIRED_DATA
            message: The request did not contain a required property 'taxAmount'
            help_url: https://docs.example.com/errors#MISSING_REQUIRED_PARAMETER
    not_found_error_response:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                description: Application-specific error code
                enum:
                  - INVALID_OPERATION
              message:
                type: string
                description: A short message describing the reason for the error.
              help_url:
                type: string
                format: uri
                description: The link to the documentation for more information about
                  the error and the corrective action.
            required:
              - code
              - message
      example:
        errors:
          - code: INVALID_OPERATION
            message: The requested document is not found.
            help_url: https://docs.example.com/errors#INVALID_OPERATION
    address:
      type: object
      properties:
        line_1:
          type: string
          description: First line of the address.
        line_2:
          type: string
          description: Second line of the address.
        line_3:
          type: string
          description: Third line of the address.
        zip:
          type: string
          description: Postal or ZIP code.
        city:
          type: string
          description: City name.
        division:
          type: string
          description: Division name.
        country:
          type: string
          description: ISO 3166-1 alpha-2 country code.
    tax_scheme:
      type: object
      properties:
        scheme:
          type: string
          description: Name or type of the tax scheme (e.g., Germany VAT Number).
        id:
          type: string
          description: The identification scheme identifier of the party electronic
            address.
      required:
        - scheme
        - id
    party_legal_entity:
      type: object
      description: Legal entity information of the party.
      properties:
        registration_name:
          type: string
          description: The full formal name by which the party is registered.
        company_id:
          type: string
          description: An identifier issued by an official registrar that identifies
            the party as a legal entity or person.
      required:
        - registrationName
    webhook_document_status:
      type: object
      properties:
        document_id:
          type: string
          description: Unique identifier of the submitted document.
        document_type:
          type: string
          enum:
            - INVOICE
            - CREDIT_NOTE
          description: Type of the document that was processed.
        status:
          type: string
          enum:
            - SUBMITTED
            - ACCEPTED
            - REJECTED
            - FAILED
          description: Current status of the document after processing by the provider.
        timestamp:
          type: string
          format: date-time
          description: ISO 8601 timestamp indicating when the status was determined.
        tenant_id:
          type: string
          description: Identifier of the tenant (merchant) for whom the document was processed.
        errors:
          $ref: '#/components/schemas/bad_request_error_response'
      required:
        - document_id
        - document_type
        - status
        - timestamp
        - tenant_id
    500_error_response:
      description: An unexpected error occurred while processing your request.
      properties:
        message:
          type: string
          description: A human-readable description of the unexpected error encountered.
          example: An unexpected error occurred while processing your request.
      required:
        - message
  examples:
    invoice_document_submission_success:
      description: A sample invoice document submission request.
      value:
        id: INV-10001
        type: INVOICE
        issue_date: '2025-04-02'
        tax_date: '2025-04-02'
        currency_code: EUR
        due_date: '2025-04-30'
        amount: 114.0
        note: Payment due in 28 days.
        accounting_supplier_party:
          name: Example Seller GmbH
          address:
            line_1: Hauptstr. 456
            line_2: Suite 5
            zip: '50667'
            city: Cologne
            country: DE
          tax_scheme:
            - scheme: VAT
              id: DE987654321
        accounting_customer_party:
          name: Example Buyer GmbH
          address:
            line_1: Berliner Str. 123
            line_2: 2nd Floor
            zip: '10115'
            city: Berlin
            country: DE
          tax_scheme:
            - scheme: VAT
              id: DE123456789
        payment_means:
          - code: ONLINE_PAYMENT_SERVICE
            payment_id: PAY-2024-00987
            card_account:
              primary_account_number_id: 4111********1111
              card_holder_name: Jane Smith
              network_id: MASTERCARD
        lines:
          - id: '1'
            description: Consulting Services - April
            quantity: 1
            unit_price: 100.0
            amount: 100.0
            item_code: CONS-APRIL
            classified_tax_category:
              percentage: 14
              category: VAT
              country: DE
        tax_total:
          tax_amount: 14.0
          tax_sub_totals:
            - taxable_amount: 100.0
              tax_amount: 14.0
              percentage: 14
              country: DE
              category: VAT
    invoice_document_submission_with_field_mapping_success:
      description: A sample invoice document submission request.
      value:
        id: INV-10001
        type: INVOICE
        issue_date: '2025-04-02'
        tax_date: '2025-04-02'
        currency_code: EUR
        due_date: '2025-04-30'
        amount: 114.0
        note: Payment due in 28 days.
        accounting_supplier_party:
          name: Example Seller GmbH
          address:
            line_1: Hauptstr. 456
            line_2: Suite 5
            zip: '50667'
            city: Cologne
            country: DE
          tax_scheme:
            - scheme: VAT
              id: DE987654321
        accounting_customer_party:
          name: Example Buyer GmbH
          address:
            line_1: Berliner Str. 123
            line_2: 2nd Floor
            zip: '10115'
            city: Berlin
            country: DE
          tax_scheme:
            - scheme: VAT
              id: DE123456789
        payment_means:
          - code: ONLINE_PAYMENT_SERVICE
            payment_id: PAY-2024-00987
            card_account:
              primary_account_number_id: 4111********1111
              card_holder_name: Jane Smith
              network_id: MASTERCARD
        lines:
          - id: '1'
            description: Consulting Services - April
            quantity: 1
            unit_price: 100.0
            amount: 100.0
            item_code: CONS-APRIL
            classified_tax_category:
              percentage: 14
              category: VAT
              country: DE
        tax_total:
          tax_amount: 14.0
          tax_sub_totals:
            - taxable_amount: 100.0
              tax_amount: 14.0
              percentage: 14
              country: DE
              category: VAT
        field_mapping:
          Invoice/cbc:ID: document.id
          Invoice/cbc:IssueDate: document.issue_date
          Invoice/cbc:InvoiceTypeCode: 380
          Invoice/cbc:DocumentCurrencyCode: document.currency_code
          Invoice/cac:AccountingSupplierParty/cac:Party/cbc:EndpointID: document.accounting_supplier_party.legal_entity.company_id
          Invoice/cac:AccountingSupplierParty/cac:Party/cac:PostalAddress/cac:Country/cbc:IdentificationCode: document.accounting_supplier_party.address.country
          Invoice/cac:AccountingSupplierParty/cac:Party/cac:PartyLegalEntity/cbc:RegistrationName: document.accounting_supplier_party.legal_entity.registration_name
          Invoice/cac:AccountingCustomerParty/cac:Party/cbc:EndpointID: document.accounting_customer_party.legal_entity.company_id
          Invoice/cac:AccountingCustomerParty/cac:Party/cac:PostalAddress/cac:Country/cbc:IdentificationCode: document.accounting_customer_party.address.country
          Invoice/cac:AccountingCustomerParty/cac:Party/cac:PartyLegalEntity/cbc:RegistrationName: document.accounting_customer_party.legal_entity.registration_name

          Invoice/cac:TaxTotal/cbc:TaxAmount: document.tax_total.tax_amount
          Invoice/cac:TaxTotal/cbc:TaxAmount/@currencyID: document.currency_code
          Invoice/cac:InvoiceLine/cbc:ID: document.lines[].id
          Invoice/cac:InvoiceLine/cbc:InvoicedQuantity: document.lines[].quantity
          Invoice/cac:InvoiceLine/cbc:InvoicedQuantity/@unitCode: document.lines[].unit_code
          Invoice/cac:InvoiceLine/cbc:LineExtensionAmount: document.lines[].amount
          Invoice/cac:InvoiceLine/cbc:LineExtensionAmount/@currencyID: document.currency_code
          Invoice/cac:InvoiceLine/cac:Item/cbc:Name: document.lines[].description
          Invoice/cac:InvoiceLine/cac:Item/cac:ClassifiedTaxCategory/cbc:ID: document.lines[].classified_tax_category[].category
          Invoice/cac:InvoiceLine/cac:Item/cac:ClassifiedTaxCategory/cac:TaxScheme/cbc:ID: document.lines[].classified_tax_category[].category
          Invoice/cac:InvoiceLine/cac:Price/cbc:PriceAmount: document.lines[].unit_price
          Invoice/cac:InvoiceLine/cac:Price/cbc:PriceAmount/@currencyID: document.currency_code
    credit_note_document_submission_success:
      description: A sample credit note document submission request.
      value:
        id: CN-20002
        type: CREDIT_NOTE
        issue_date: '2025-04-10'
        tax_date: '2025-04-10'
        currency_code: EUR
        due_date: '2025-04-30'
        amount: 50.0
        note: Credit issued for April billing adjustment.
        billing_reference:
          - 'INV-10001'
        accounting_supplier_party:
          name: Example Seller GmbH
          address:
            line_1: Hauptstr. 456
            line_2: Suite 5
            zip: '50667'
            city: Cologne
            country: DE
          tax_scheme:
            - scheme: VAT
              id: DE987654321
        accounting_customer_party:
          name: Example Buyer GmbH
          address:
            line_1: Berliner Str. 123
            line_2: 2nd Floor
            zip: '10115'
            city: Berlin
            country: DE
          tax_scheme:
            - scheme: VAT
              id: DE123456789
        payment_means:
          - code: ONLINE_PAYMENT_SERVICE
            payment_id: PAY-2024-01002
            card_account:
              primary_account_number_id: 4111********2222
              card_holder_name: John Doe
              network_id: VISA
        lines:
          - id: '1'
            description: Refund for overcharge in April
            quantity: 1
            unit_price: 50.0
            amount: 50.0
            item_code: APRIL-REFUND
            classified_tax_category:
              percentage: 14
              category: VAT
              country: DE
        tax_total:
          tax_amount: 7.0
          tax_sub_totals:
            - taxable_amount: 50.0
              tax_amount: 7.0
              percentage: 14
              country: DE
              category: VAT
    credit_note_document_submission_with_field_mapping_success:
      description: A sample credit note document submission request.
      value:
        id: CN-20002
        type: CREDIT_NOTE
        issue_date: '2025-04-10'
        tax_date: '2025-04-10'
        currency_code: EUR
        due_date: '2025-04-30'
        amount: 50.0
        note: Credit issued for April billing adjustment.
        billing_reference:
          - 'INV-10001'
        accounting_supplier_party:
          name: Example Seller GmbH
          address:
            line_1: Hauptstr. 456
            line_2: Suite 5
            zip: '50667'
            city: Cologne
            country: DE
          tax_scheme:
            - scheme: VAT
              id: DE987654321
        accounting_customer_party:
          name: Example Buyer GmbH
          address:
            line_1: Berliner Str. 123
            line_2: 2nd Floor
            zip: '10115'
            city: Berlin
            country: DE
          tax_scheme:
            - scheme: VAT
              id: DE123456789
        payment_means:
          - code: ONLINE_PAYMENT_SERVICE
            payment_id: PAY-2024-01002
            card_account:
              primary_account_number_id: 4111********2222
              card_holder_name: John Doe
              network_id: VISA
        lines:
          - id: '1'
            description: Refund for overcharge in April
            quantity: 1
            unit_price: 50.0
            amount: 50.0
            item_code: APRIL-REFUND
            classified_tax_category:
              percentage: 14
              category: VAT
              country: DE
        tax_total:
          tax_amount: 7.0
          tax_sub_totals:
            - taxable_amount: 50.0
              tax_amount: 7.0
              percentage: 14
              country: DE
              category: VAT
        field_mapping:
          Creditnote/cbc:ID: document.id
          Creditnote/cbc:IssueDate: document.issue_date
          Creditnote/cbc:InvoiceTypeCode: 381
          Creditnote/cbc:DocumentCurrencyCode: document.currency_code
          Creditnote/cac:BillingReference: document.billing_reference
          Creditnote/cac:AccountingSupplierParty/cac:Party/cbc:EndpointID: document.accounting_supplier_party.legal_entity.company_id
          Creditnote/cac:AccountingSupplierParty/cac:Party/cac:PostalAddress/cac:Country/cbc:IdentificationCode: document.accounting_supplier_party.address.country
          Creditnote/cac:AccountingSupplierParty/cac:Party/cac:PartyLegalEntity/cbc:RegistrationName: document.accounting_supplier_party.legal_entity.registration_name
          Creditnote/cac:AccountingCustomerParty/cac:Party/cbc:EndpointID: document.accounting_customer_party.legal_entity.company_id
          Creditnote/cac:AccountingCustomerParty/cac:Party/cac:PostalAddress/cac:Country/cbc:IdentificationCode: document.accounting_customer_party.address.country
          Creditnote/cac:AccountingCustomerParty/cac:Party/cac:PartyLegalEntity/cbc:RegistrationName: document.accounting_customer_party.legal_entity.registration_name
          Creditnote/cac:TaxTotal/cbc:TaxAmount: document.tax_total.tax_amount
          Creditnote/cac:TaxTotal/cbc:TaxAmount/@currencyID: document.currency_code
          Creditnote/cac:InvoiceLine/cbc:ID: document.lines[].id
          Creditnote/cac:InvoiceLine/cbc:InvoicedQuantity: document.lines[].quantity
          Creditnote/cac:InvoiceLine/cbc:InvoicedQuantity/@unitCode: document.lines[].unit_code
          Creditnote/cac:InvoiceLine/cbc:LineExtensionAmount: document.lines[].amount
          Creditnote/cac:InvoiceLine/cbc:LineExtensionAmount/@currencyID: document.currency_code
          Creditnote/cac:InvoiceLine/cac:Item/cbc:Name: document.lines[].description
          Creditnote/cac:InvoiceLine/cac:Item/cac:ClassifiedTaxCategory/cbc:ID: document.lines[].classified_tax_category[].category
          Creditnote/cac:InvoiceLine/cac:Item/cac:ClassifiedTaxCategory/cac:TaxScheme/cbc:ID: document.lines[].classified_tax_category[].category
          Creditnote/cac:InvoiceLine/cac:Price/cbc:PriceAmount: document.lines[].unit_price
          Creditnote/cac:InvoiceLine/cac:Price/cbc:PriceAmount/@currencyID: document.currency_code
    einvoice_document_submission_pending:
      description: A sample response indicating the document is under processing.
      value:
        document_id: DOC-20250402-0002
        status: PENDING
        request_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    einvoice_document_submission_failed:
      description: A sample response indicating document submission failure due to missing required data.
      value:
        status: FAILED
        errors:
          - code: MISSING_REQUIRED_DATA
            message: The request did not contain a required property 'taxAmount'
            help_url: https://docs.example.com/errors#MISSING_REQUIRED_PARAMETER
    successful_einvoice_document_submission_response:
      description: A sample response indicating successful e-invoice document submission.
      value:
        document_id: DOC-20250402-0001
        status: Success
        submission_date: 2025-04-02T07:39:31.815Z
    failed_einvoice_document_submission_response:
      description: A sample failed document submission response due to unregistered VAT number.
      value:
        status: FAILED
        errors:
          - code: INVALID_DATA
            message: The VAT number provided is not registered with the tax authority.
    einvoice_document_download_url_response:
      description: A sample response with pre-signed S3 URL for document download.
      value:
        document_id: DOC-20250402-0001
        request_id: a3d56940-2827-4b87-a229-00d8b95cbe77
        documents:
          - mime_type: application/xml
            document_url: https://your-bucket.s3.amazonaws.com/invoice-20250402.xml?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=EXAMPLE
            expires_at: '2025-03-28T09:24:29Z'
        network: peppol
    einvoice_document_download_stream_response:
      description: A sample response with Base64-encoded XML and PDF document content.
      value:
        document_id: DOC-20250402-0001
        request_id: a3d56940-2827-4b87-a229-00d8b95cbe77
        documents:
          - mime_type: application/xml
            document_content: PHh...Q0w+  # Base64-encoded XML content (truncated)
            expires_at: '2025-03-28T09:24:29Z'
          - mime_type: application/pdf
            document_content: JVBERi0xLjQKJ...CiUlRU9GCg==  # Base64-encoded PDF content (truncated)
            expires_at: '2025-03-28T09:24:29Z'
        network: peppol
    webhook_document_status_success:
      description: A sample webhook notification indicating successful document submission.
      value:
        document_id: INV-10001
        document_type: INVOICE
        status: ACCEPTED
        timestamp: 2025-05-23T13:22:50.519Z
        tenant_id: einvoicing-test
    webhook_document_status_failed:
      description: A sample webhook notification indicating document submission failure.
      value:
        document_id: INV-10001
        document_type: INVOICE
        status: FAILED
        timestamp: 2025-05-23T13:22:50.519Z
        tenant_id: einvoicing-test
        errors:
          errors:
            - code: MISSING_REQUIRED_DATA
              message: The request did not contain a required property 'taxAmount'
              help_url: https://docs.example.com/errors#MISSING_REQUIRED_PARAMETER
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key