openapi: "3.0.0"
info:
  title: "E-Invoicing Service Provider Interface"
  description: |
    
    The E-Invoicing Service Provider Interface (SPI) is designed to enable Chargebee to seamlessly communicate with various Electronic Invoicing Service Providers. This SPI facilitates the following key functionalities:
    
    - **Document Submission:** Submit electronic documents to E-Invoice Service Providers for processing and compliance.
    - **Document Status Tracking:** Monitor the status of submitted e-invoices to ensure timely processing and resolution of any issues.
    - **Document Download:** Download e-invoice documents for record-keeping, auditing, and compliance purposes.
    - **Activation Management:** Get Activations with e-invoicing networks, allowing businesses to register and activate mandates.

    If you have an API that provides the services mentioned above and wish to integrate it with Chargebee, you can develop an adapter service following this specification. This will allow Chargebee to efficiently manage e-invoicing processes while ensuring compliance with local e-invoicing regulations.
  version: "1.0.0"
servers:
  - url: "https://api.example.com"
    description: "Production server (replace with actual service URL)"
  - url: "https://sandbox.example.com"
    description: "Sandbox server for testing"
tags:
  - name: "Activations"
    description: "Operations related to e-invoicing activations"
  - name: "Documents"
    description: "Operations related to e-invoicing documents"

security:
  - ApiKeyAuth: []
paths:
  /einvoicing/activations:
    get:
      tags: ["Activations"]
      summary: Retrieve a list of Activations
      operationId: listActivations
      responses:
        '200':
          description: A list of activations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivationsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Unexpected error while processing request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500Response'


  /einvoicing/documents:
    post:
      tags: ["Documents"]
      summary: "Submit Document (Mandatory)"
      description: "Submit a new document (invoice or credit note) to the e-invoicing service."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        '200':
          description: "Document submitted successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/DocumentSubmissionResponse"
                  - type: object
                    properties:
                      request_id:
                        type: string
                        format: uuid
                        description: Unique identifier for tracing the request
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentSubmissionErrorResponse"
        "401":
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Unexpected error while processing request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500Response'
  /einvoicing/documents/{documentId}/status:
    get:
      tags: ["Documents"]
      summary: "Get Document Status"
      parameters:
        - name: "documentId"
          in: "path"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Document status retrieved successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentStatus"
        "401":
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Unexpected error while processing request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500Response'
  /einvoicing/documents/{documentId}/download:
    get:
      tags: ["Documents"]
      summary: "Download Document  (Mandatory)"
      parameters:
        - name: "documentId"
          in: "path"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Document downloaded successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DownloadDocumentResponse"
        '400':
          description: Bad request
        "401":
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Unexpected error while processing request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500Response'

components:
  schemas:
    Activation:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the activation
        status:
          type: object
          properties:
            code:
              type: string
              description: The status code
              enum:
                - Completed
                - Failed
                - Pending
            message:
              type: string
              description: A message describing the activation status
        company:
          type: object
          properties:
            identifier:
              type: string
              description: The unique identifier for the company
            displayName:
              type: string
              description: The display name of the company
        countryActivations:
          type: array
          items:
            $ref: '#/components/schemas/countryActivation'

    countryActivation:
      type: object
      properties:
        network:
          type: string
          description: The e-invoicing network associated with the activation (e.g., PEPPOL).
        countryCode:
          type: string
          description: ISO 3166-1 alpha-2 country code where the e-invoicing activation is applicable.
        eInvoicingType:
          type: string
          description: Specifies the type of business transaction for which e-invoicing is applied.
          enum:
            - B2B
            - B2C
            - B2G
    ActivationsResponse:
      type: object
      properties:
        activations:
          type: array
          items:
            $ref: '#/components/schemas/Activation'
      example:
        activations:
          - id: reg-123456789
            status:
              code: Completed
              message: Activation completed successfully.
            company:
              identifier: DE123456789
              displayName: Acme GmbH
            countryActivations:
              - network: PEPPOL
                countryCode: DE
                einvoicingType: B2B
    MandatesResponse:
      type: object
      properties:
        mandates:
          type: array
          items:
            $ref: '#/components/schemas/Mandate'

    Mandate:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the mandate
        country:
          type: string
          description: The country associated with the mandate
        description:
          type: string
          description: A brief description of the mandate
        effectiveDate:
          type: string
          format: date
          description: The date when the mandate becomes effective
        documentTypes:
          type: array
          items:
            type: string
          description: List of document types applicable to the mandate

    DataInputFieldsResponse:
      type: object
      properties:
        mandateId:
          type: string
          description: The unique identifier of the mandate
        documentType:
          type: string
          description: The type of document
        version:
          type: string
          description: The version of the document type
        fields:
          type: array
          items:
            $ref: '#/components/schemas/DataInputField'

    DataInputField:
      type: object
      properties:
        name:
          type: string
          description: The name of the data input field
        type:
          type: string
          description: The data type of the field (e.g., 'string', 'number')
        required:
          type: boolean
          description: Indicates if the field is mandatory
        description:
          type: string
          description: A brief description of the field

    Document:
      type: object
      properties:
        id:
          type: string
          description: A Unique identifier of the document.
        type:
          type: string
          enum: ["INVOICE", "CREDIT_NOTE"]
          description: Type of document, either an invoice or a credit note.
        issueDate:
          type: string
          format: date
          description: The date when the Document was issued. Format "YYYY-MM-DD"
        taxDate:
          type: string
          format: date
          description: The date used for determining tax. Format "YYYY-MM-DD"
        currencyCode:
          type: string
          description: The currency code (ISO 4217 format) for the document.
        dueDate:
          type: string
          format: date
          description: The date when the payment is due. Format "YYYY-MM-DD".
        amount:
          type: number
          description: Total payable amount for the document, including taxes.
        note:
          type: string
          description: A textual note that gives unstructured information that is relevant to the Document as a whole. Such as the reason for any correction or assignment note in case the document has been factored.
        accountingSupplierParty:
          type: object
          description: Party responsible for issuing the document (i.e., the supplier).
          properties:
            name:
              type: string
              description: Name of the supplier party.
            address:
              description: Address of the Supplier party.
              $ref: '#/components/schemas/Address'
            taxScheme:
              type: array
              description: List of tax identifiers associated with the supplier.
              items:
                $ref: '#/components/schemas/TaxScheme'
            legalEntity:
              description: Legal entity of the supplier party.
              $ref: '#/components/schemas/PartyLegalEntity'
        accountingCustomerParty:
          type: object
          description: Party responsible for receiving the invoice (i.e., the customer).
          properties:
            name:
              type: string
              description: Name of the customer party.
            address:
              description: Address of the customer party.
              $ref: '#/components/schemas/Address'
            taxScheme:
              type: array
              description: List of tax identifiers associated.
              items:
                $ref: '#/components/schemas/TaxScheme'
            legalEntity:
              description: Legal entity of the customer party.
              $ref: '#/components/schemas/PartyLegalEntity'
        paymentMeans:
          type: object
          description: Defines the method and details for payment.
          $ref: '#/components/schemas/PaymentMeans'
        lines:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: A unique identifier for the individual line within the document.
              description:
                type: string
                description: A textual note that gives unstructured information that is relevant to the document.
              quantity:
                type: integer
                description: The quantity of items (goods or services) that is charged.
              unitPrice:
                type: number
                description: The unit price for this line.
              amount:
                type: number
                description: The total amount of the line without tax.
              discount:
                type: number
                description: The discount applied to the line.
              itemCode:
                type: string
                description: The unique identifier (in Chargebee) of the product corresponding to the line.
              classifiedTaxCategory:
                type: array
                description: List of tax categories applicable to the invoice line, such as VAT or other indirect taxes.
                items:
                  type: object
                  properties:
                    percentage:
                      type: number
                      description: The tax rate percentage applicable to this tax category (e.g., 19 for 19% VAT).
                    category:
                      type: string
                      description: A code or label identifying the type of tax category.
                    country:
                      type: string
                      description: The ISO 3166-1 alpha-2 country code where the tax category is applicable (e.g., DE for Germany).
            required: ["id", "description", "amount", "quantity", "name", "classifiedTaxCategory"]

        taxTotal:
          type: object
          description: Represents the total tax details for the document.
          properties:
            taxAmount:
              type: number
              description: The total tax amount for the document.
              format: double
            taxSubTotals:
              type: array
              items:
                type: object
                properties:
                  taxableAmount:
                    type: number
                    format: double
                    description: Total taxable amount for the category.
                  taxAmount:
                    type: number
                    format: double
                    description: Total Tax amount for the category
                  percentage:
                    type: number
                    format: double
                    description: The tax rate percentage applied to the taxable amount.
                  country:
                    type: string
                    description: The country code where the tax applies.
                  category:
                    type: string
                    description: The category of tax applied (e.g., VAT).
      example:
        id: INV-10001
        type: INVOICE
        issueDate: 2025-04-02
        taxDate: 2025-04-02
        currencyCode: EUR
        dueDate: 2025-04-30
        amount: 114.00
        note: Payment due in 28 days.
        accountingCustomerParty:
          party:
            name: Example Buyer GmbH
            address:
              street1: Berliner Str. 123
              street2: 2nd Floor
              zip: "10115"
              city: Berlin
              country: DE
          taxScheme:
            - scheme: VAT
              id: DE123456789
        accountingSupplierParty:
          party:
            name: Example Seller GmbH
            address:
              street1: Hauptstr. 456
              street2: Suite 5
              zip: "50667"
              city: Cologne
              country: DE
          taxScheme:
            - scheme: VAT
              id: DE987654321
        paymentMeans:
          code: ONLINE_PAYMENT_SERVICE
          paymentID: "PAY-2024-00987"
          cardAccount:
            primaryAccountNumberID: "4111********1111"
            cardHolderName: "Jane Smith"
            networkID: "MASTERCARD"
        lines:
          - id: "1"
            description: Consulting Services - April
            amount: 100.00
            quantity: 1
            name: Consulting
            standardItemIdentification: CONS-APRIL
            classifiedTaxCategory:
              - percentage: 14
                category: VAT
                country: DE
        taxTotal:
          taxAmount: 14.00
          taxSubTotals:
            - taxableAmount: 100.00
              taxAmount: 14.00
              percentage: 14
              country: DE
              category: VAT
    Delivery:
      type: object
      properties:
        actualDeliveryDate:
          type: string
          format: date
        deliveryLocation:
          $ref: '#/components/schemas/DeliveryLocation'
        deliveryParty:
          $ref: '#/components/schemas/DeliveryParty'

    DeliveryLocation:
      type: object
      properties:
        id:
          type: string
        schemeID:
          type: string
        address:
          $ref: '#/components/schemas/Address'
    AddressTmp:
      type: object
      properties:
        streetName:
          type: string
        additionalStreetName:
          type: string
        cityName:
          type: string
        postalZone:
          type: string
        country:
          $ref: '#/components/schemas/Country'

    Country:
      type: object
      properties:
        identificationCode:
          type: string

    DeliveryParty:
      type: object
      properties:
        partyName:
          type: string


    PaymentTerms:
      type: object
      properties:
        note:
          type: string

      required:
        - taxSubtotals
        - Number
        - IssueDate
        - taxDate
        - CurrencyCode
        - amount
        - dueDate
        - documentLines
        - accountingCustomerParty
        - accountingSupplierParty
        - paymentDetails
    PaymentMeans:
      type: object
      description: Defines the method and details for payment.
      properties:
        code:
          type: string
          description: The means, expressed as code, for how a payment is expected to be or has been settled.
          enum:
            - CREDIT_TRANSFER
            - ONLINE_PAYMENT_SERVICE
            - DIRECT_DEBIT
        paymentID:
          type: string
          description: A textual value used to establish a link between the payment and the Invoice, issued by the Seller. Used for creditor's critical reconciliation information. This information element helps the Seller to assign an incoming payment to the relevant payment process.
        payeeFinancialAccount:
          type: object
          description: A group of business terms to specify credit transfer payments.
          properties:
            id:
              type: string
              description: A unique identifier of the financial payment account, at a payment service provider, to which payment should be made. Such as IBAN or BBAN (e.g., IBAN).
          required:
            - id
        paymentMandate:
          type: object
          description: A group of business terms to specify a direct debit.
          properties:
            id:
              type: string
              description: Unique identifier assigned by the Payee for referencing the direct debit mandate.
            mandateType:
              type: string
              description: Type of mandate (e.g., SEPA, national DD agreement).
        cardAccount:
          type: object
          description: A group of business terms providing information about card used for payment contemporaneous with invoice issuance.
          properties:
            primaryAccountNumberID:
              type: string
              description: The Primary Account Number (PAN) of the card used for payment.
            cardHolderName:
              type: string
              description: The name of the payment card holder.
            networkID:
              type: string
              description: The identifier of the card network. (e.g., VISA, MasterCard).
    DocumentSubmissionResponse:
      type: object
      properties:
        documentId:
          type: string
        status:
          type: string
          description: The status code
          enum:
            - ACCEPTED
            - FAILED
      example:
        documentId: DOC-20250402-0002
        status: PENDING
        request_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    DocumentStatus:
      type: object
      properties:
        documentId:
          type: string
          description: "Unique identifier for the document submitted."
        status:
          type: string
          description: "The current status of the document submission."
          enum:
            - Success
            - Failed
            - In-progress
        submissionDate:
          type: string
          format: date-time
          description: "Date and time when the document was submitted."
        processingDetails:
          type: object
          $ref: "#/components/schemas/DocumentSubmissionErrorResponse"
      example:
        documentId: DOC-20250402-0001
        status: Success
        submissionDate: 2025-04-02T07:39:31.815Z
      required:
        - documentId
        - status

    DownloadDocumentResponse:
      type: object
      required:
        - request_id
        - sender
        - receiver
        - documents
        - evidence
        - network
      properties:
        request_id:
          type: string
        documents:
          type: array
          items:
            type: object
            required:
              - mime_type
              - document_url
              - expires_at
            properties:
              mime_type:
                type: string
                example: application/xml
              document_url:
                type: string
                format: uri
                description: Presigned URL to access the document
              expires_at:
                type: string
                format: date-time
                example: 2025-03-28T09:24:29Z
        network:
          type: string
          enum: [peppol]
      example:
        request_id: "a3d56940-2827-4b87-a229-00d8b95cbe77"
        documents:
          - mime_type: "application/xml"
            document_url: "https://provider.com/downloads/invoice-20250402.xml"
            expires_at: "2025-03-28T09:24:29Z"
        network: peppol

    ParticipantsResponse:
      type: object
      properties:
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant'
    Participant:
      type: object
      properties:
        participantId:
          type: string
          description: The unique identifier of the participant
        participantName:
          type: string
          description: The name of the participant
        country:
          type: string
          description: The country where the participant is located
        status:
          type: string
          description: The current status of the participant (e.g., 'Active', 'Inactive')
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: List of identifiers associated with the participant
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
          description: List of addresses associated with the participant
        supportedDocumentTypes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentType'
          description: List of document types supported by the participant

    Identifier:
      type: object
      properties:
        type:
          type: string
          description: The type of identifier (e.g., 'VAT', 'EORI')
        value:
          type: string
          description: The value of the identifier

    DocumentType:
      type: object
      properties:
        type:
          type: string
          description: The type of document (e.g., 'Invoice', 'CreditNote')
        version:
          type: string
          description: The version of the document type
    DocumentSubmissionErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                description: The error codes classify the type of exception that occurred during processing the request.
                enum:
                  - INVALID_OPERATION
                  - SERVICE_EXCEPTION
                  - SERVICE_UNAVAILABLE
                  - SERVICE_LIMIT_EXCEEDED
                  - MISSING_REQUIRED_DATA
                  - INVALID_DATA
              message:
                type: string
                description: A short message describing the reason for the error.
              helpUrl:
                type: string
                format: uri
                description: The link to the documentation for more information about the error and the corrective action.
            required:
              - code
              - message
      example:
        errors:
          - code: MISSING_REQUIRED_DATA
            message: The request did not contain a required property 'taxAmount'
            helpUrl: https://docs.example.com/errors#MISSING_REQUIRED_PARAMETER
    DocumentStatusErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                description: Application-specific error code
                enum:
                  - INVALID_OPERATION
                  - SERVICE_EXCEPTION
                  - SERVICE_UNAVAILABLE
                  - SERVICE_LIMIT_EXCEEDED
                  - MISSING_REQUIRED_DATA
                  - INVALID_DATA
              message:
                type: string
                description: A short message describing the reason for the error.
              helpUrl:
                type: string
                format: uri
                description: The link to the documentation for more information about the error and the corrective action.
            required:
              - code
              - message
      example:
        errors:
          - code: INVALID_DATA
            message: The requested document is not found.
            helpUrl: https://docs.example.com/errors#INVALID_DATA
    Address:
      type: object
      properties:
        line1:
          type: string
          description: First line of the address.
        line2:
          type: string
          description: Second line of the address.
        line3:
          type: string
          description: Third line of the address.
        zip:
          type: string
          description: Postal or ZIP code.
        city:
          type: string
          description: City name.
        division:
          type: string
          description: Division name.
        country:
          type: string
          description: ISO 3166-1 alpha-2 country code.
    TaxScheme:
      type: object
      properties:
        scheme:
          type: string
          description: Name or type of the tax scheme (e.g., Germany VAT Number).
        id:
          type: string
          description: The identification scheme identifier of the party electronic address.
      required:
        - scheme
        - id
    PartyLegalEntity:
      type: object
      description: Legal entity information of the party.
      properties:
        registrationName:
          type: string
          description: The full formal name by which the party is registered.
        companyID:
          type: string
          description: An identifier issued by an official registrar that identifies the party as a legal entity or person.
      required:
        - registrationName
    GetActivationsErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                description: Application-specific error code
                enum:
                  - INVALID_QUERY_PARAMETER
                  - INVALID_PAGINATION
                  - UNSUPPORTED_PARAMETER
              message:
                type: string
                description: Human-readable error message
              helpUrl:
                type: string
                format: uri
                description: A URL to helpful documentation
            required:
              - code
              - message
      example:
        errors:
          - code: INVALID_QUERY_PARAMETER
            message: The 'limit' parameter must be an integer.
    Error500Response:
      description: An unexpected error occurred while processing your request.
      example:
        message: An unexpected error occurred while processing your request.
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: "X-API-Key"

