openapi: "3.0.0"
info:
  title: "E-Invoicing Service Provider Interface"
  description: |
    
    The E-Invoicing Service Provider Interface (SPI) is designed to enable Chargebee to seamlessly communicate with various Electronic Invoicing Service Providers. This SPI facilitates the following key functionalities:
    
    - **Document Submission:** Submit electronic documents to E-Invoice Service Providers for processing and compliance.
    - **Document Status Tracking:** Monitor the status of submitted e-invoices to ensure timely processing and resolution of any issues.
    - **Document Download:** Download e-invoice documents for record-keeping, auditing, and compliance purposes.
    - **Activation Management:** Get Activations with e-invoicing networks, allowing businesses to register and activate mandates.

    If you have an API that provides the services mentioned above and wish to integrate it with Chargebee, you can develop an adapter service following this specification. This will allow Chargebee to efficiently manage e-invoicing processes while ensuring compliance with local e-invoicing regulations.
  version: "1.0.0"
servers:
  - url: "https://api.example.com"
    description: "Production server (replace with actual service URL)"
  - url: "https://sandbox.example.com"
    description: "Sandbox server for testing"
tags:
  - name: "Activations"
    description: "Operations related to e-invoicing activations"
  - name: "Documents"
    description: "Operations related to e-invoicing documents"

security:
  - ApiKeyAuth: []
paths:
  /einvoicing/activations:
    get:
      tags: ["Activations"]
      summary: Retrieve a list of Activations
      operationId: listActivations
      responses:
        '200':
          description: A list of activations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivationsResponse'
        '400':
          description: Bad request(TBA)
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found

  /einvoicing/documents:
    post:
      tags: ["Documents"]
      summary: "Submit Document (Mandatory)"
      description: "Submit a new document (invoice or credit note) to the e-invoicing service."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        '200':
          description: "Document submitted successfully."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/DocumentSubmissionResponse"
                  - type: object
                    properties:
                      request_id:
                        type: string
                        format: uuid
                        description: Unique identifier for tracing the request
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentErrorResponse"
        "401":
          description: Unauthorized
        '403':
          description: Forbidden
        "500":
          description: Unexpected error while processing request.
  /einvoicing/documents/{documentId}/status:
    get:
      tags: ["Documents"]
      summary: "Get Document Status"
      parameters:
        - name: "documentId"
          in: "path"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Document status retrieved successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentStatus"
        '400':
          description: Bad request
        "401":
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        "500":
          description: Unexpected error while processing request.
  /einvoicing/documents/{documentId}/download:
    get:
      tags: ["Documents"]
      summary: "Download Document  (Mandatory)"
      parameters:
        - name: "documentId"
          in: "path"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Document downloaded successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DownloadDocumentResponse"
        '400':
          description: Bad request
        "401":
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        "500":
          description: Unexpected error while processing request.

components:
  schemas:
    Activation:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the activation
        status:
          type: object
          properties:
            code:
              type: string
              description: The status code
              enum:
                - Completed
                - Failed
                - Pending
            message:
              type: string
              description: A message describing the activation status
        company:
          type: object
          properties:
            identifier:
              type: string
              description: The unique identifier for the company
            displayName:
              type: string
              description: The display name of the company
        mandates:
          type: array
          items:
            $ref: '#/components/schemas/RegisteredMandate'

    RegisteredMandate:
      type: object
      properties:
        countryMandate:
          type: string
          description: The specific mandate identifier for the country
        countryCode:
          type: string
          description: The country code associated with the mandate
        mandateType:
          type: string
          description: The type of mandate
          enum:
            - B2B
            - B2C
            - B2G
    ActivationsResponse:
      type: object
      properties:
        activationsCount:
          type: integer
          description: Total number of Activations
        value:
          type: array
          items:
            $ref: '#/components/schemas/Activation'
      example:
        activationsCount: 1
        value:
          - id: reg-123456789
            status:
              code: Completed
              message: Activation completed successfully.
            company:
              identifier: DE123456789
              displayName: Acme GmbH
            mandates:
              - countryMandate: VAT Registration
                countryCode: DE
                mandateType: B2B
    MandatesResponse:
      type: object
      properties:
        mandates:
          type: array
          items:
            $ref: '#/components/schemas/Mandate'

    Mandate:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the mandate
        country:
          type: string
          description: The country associated with the mandate
        description:
          type: string
          description: A brief description of the mandate
        effectiveDate:
          type: string
          format: date
          description: The date when the mandate becomes effective
        documentTypes:
          type: array
          items:
            type: string
          description: List of document types applicable to the mandate

    DataInputFieldsResponse:
      type: object
      properties:
        mandateId:
          type: string
          description: The unique identifier of the mandate
        documentType:
          type: string
          description: The type of document
        version:
          type: string
          description: The version of the document type
        fields:
          type: array
          items:
            $ref: '#/components/schemas/DataInputField'

    DataInputField:
      type: object
      properties:
        name:
          type: string
          description: The name of the data input field
        type:
          type: string
          description: The data type of the field (e.g., 'string', 'number')
        required:
          type: boolean
          description: Indicates if the field is mandatory
        description:
          type: string
          description: A brief description of the field

    Document:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum: ["INVOICE", "CREDIT_NOTE"]
        issueDate:
          type: string
          format: date
        taxDate:
          type: string
          format: date
        currencyCode:
          type: string
        dueDate:
          type: string
          format: date
        amount:
          type: number
        note:
          type: string

        accountingCustomerParty:
          type: object
          properties:
            party:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: object
                  properties:
                    street1:
                      type: string
                    street2:
                      type: string
                    zip:
                      type: string
                    city:
                      type: string
                    country:
                      type: string
            taxScheme:
              type: array
              items:
                type: object
                properties:
                  scheme:
                    type: string
                  id:
                    type: string
                required: ["scheme", "id"]
          required: ["party", "taxScheme"]
        accountingSupplierParty:
          type: object
          properties:
            party:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: object
                  properties:
                    street1:
                      type: string
                    street2:
                      type: string
                    zip:
                      type: string
                    city:
                      type: string
                    country:
                      type: string
            taxScheme:
              type: array
              items:
                type: object
                properties:
                  scheme:
                    type: string
                  id:
                    type: string
                required: ["scheme", "id"]
          required: ["party", "taxScheme"]
        lines:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              description:
                type: string
              amount:
                type: number
              quantity:
                type: integer
              name:
                type: string
              standardItemIdentification:
                type: string
              classifiedTaxCategory:
                type: array
                items:
                  type: object
                  properties:
                    percentage:
                      type: number
                    category:
                      type: string
                    country:
                      type: string
                  required: ["percentage", "category", "country"]
            required: ["id", "description", "amount", "quantity", "name", "classifiedTaxCategory"]

        taxTotal:
          type: object
          description: Represents the total tax details for an invoice.
          properties:
            taxAmount:
              type: number
              format: double
            taxSubTotals:
              type: array
              items:
                type: object
                properties:
                  taxableAmount:
                    type: number
                    format: double
                    description: The amount that is subject to tax.
                    example: 10
                  taxAmount:
                    type: number
                    format: double
                    description: The calculated tax amount for the taxable amount.
                    example: 1.4
                  percentage:
                    type: number
                    format: double
                    description: The tax rate percentage applied to the taxable amount.
                    example: 14
                  country:
                    type: string
                    description: The country code where the tax applies.
                    example: "IN"
                  category:
                    type: string
                    description: The category of tax applied (e.g., VAT, SGST, CGST).
                    example: "sgst"
      example:
        id: INV-10001
        type: INVOICE
        issueDate: 2025-04-02
        taxDate: 2025-04-02
        currencyCode: EUR
        dueDate: 2025-04-30
        amount: 114.00
        note: Payment due in 28 days.
        accountingCustomerParty:
          party:
            name: Example Buyer GmbH
            address:
              street1: Berliner Str. 123
              street2: 2nd Floor
              zip: "10115"
              city: Berlin
              country: DE
          taxScheme:
            - scheme: VAT
              id: DE123456789
        accountingSupplierParty:
          party:
            name: Example Seller GmbH
            address:
              street1: Hauptstr. 456
              street2: Suite 5
              zip: "50667"
              city: Cologne
              country: DE
          taxScheme:
            - scheme: VAT
              id: DE987654321
        lines:
          - id: "1"
            description: Consulting Services - April
            amount: 100.00
            quantity: 1
            name: Consulting
            standardItemIdentification: CONS-APRIL
            classifiedTaxCategory:
              - percentage: 14
                category: VAT
                country: DE
        taxTotal:
          taxAmount: 14.00
          taxSubTotals:
            - taxableAmount: 100.00
              taxAmount: 14.00
              percentage: 14
              country: DE
              category: VAT
    Delivery:
      type: object
      properties:
        actualDeliveryDate:
          type: string
          format: date
        deliveryLocation:
          $ref: '#/components/schemas/DeliveryLocation'
        deliveryParty:
          $ref: '#/components/schemas/DeliveryParty'

    DeliveryLocation:
      type: object
      properties:
        id:
          type: string
        schemeID:
          type: string
        address:
          $ref: '#/components/schemas/Address'

    Address:
      type: object
      properties:
        streetName:
          type: string
        additionalStreetName:
          type: string
        cityName:
          type: string
        postalZone:
          type: string
        country:
          $ref: '#/components/schemas/Country'

    Country:
      type: object
      properties:
        identificationCode:
          type: string

    DeliveryParty:
      type: object
      properties:
        partyName:
          type: string

    PaymentMeans:
      type: object
      properties:
        paymentMeansCode:
          type: string
        paymentMeansName:
          type: string
        paymentID:
          type: string
        payeeFinancialAccount:
          $ref: '#/components/schemas/PayeeFinancialAccount'

    PayeeFinancialAccount:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        financialInstitutionBranch:
          $ref: '#/components/schemas/FinancialInstitutionBranch'

    FinancialInstitutionBranch:
      type: object
      properties:
        id:
          type: string

    PaymentTerms:
      type: object
      properties:
        note:
          type: string

      required:
        - taxSubtotals
        - Number
        - IssueDate
        - taxDate
        - CurrencyCode
        - amount
        - dueDate
        - documentLines
        - accountingCustomerParty
        - accountingSupplierParty
        - paymentDetails
    DocumentSubmissionResponse:
      type: object
      properties:
        documentId:
          type: string
        status:
          type: string
          description: The status code
          enum:
            - IN_PROGRESS
      example:
        documentId: DOC-20250402-0002
        status: PENDING
        request_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    DocumentStatus:
      type: object
      properties:
        documentId:
          type: string
          description: "Unique identifier for the document."
        status:
          type: string
          description: "Current status of the document"
          enum:
            - Success
            - Failed
            - In-progress
        submissionDate:
          type: string
          format: date-time
          description: "Date and time when the document was submitted."
        processingDetails:
          type: object
          $ref: "#/components/schemas/DocumentErrorResponse"
      example:
        documentId: DOC-20250402-0001
        status: Success
        submissionDate: 2025-04-02T07:39:31.815Z
      required:
        - documentId
        - status
        - submissionDate

    DownloadDocumentResponse:
      type: object
      required:
        - request_id
        - sender
        - receiver
        - documents
        - evidence
        - network
      properties:
        request_id:
          type: string
        documents:
          type: array
          items:
            type: object
            required:
              - mime_type
              - document_url
              - expires_at
            properties:
              mime_type:
                type: string
                example: application/xml
              document_url:
                type: string
                format: uri
                description: Presigned URL to access the document
              expires_at:
                type: string
                format: date-time
                example: 2025-03-28T09:24:29Z
        network:
          type: string
          enum: [peppol]
      example:
        request_id: "a3d56940-2827-4b87-a229-00d8b95cbe77"
        documents:
          - mime_type: "application/xml"
            document_url: "https://provider.com/downloads/invoice-20250402.xml"
            expires_at: "2025-03-28T09:24:29Z"
        network: peppol

    ParticipantsResponse:
      type: object
      properties:
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant'
    Participant:
      type: object
      properties:
        participantId:
          type: string
          description: The unique identifier of the participant
        participantName:
          type: string
          description: The name of the participant
        country:
          type: string
          description: The country where the participant is located
        status:
          type: string
          description: The current status of the participant (e.g., 'Active', 'Inactive')
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          description: List of identifiers associated with the participant
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
          description: List of addresses associated with the participant
        supportedDocumentTypes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentType'
          description: List of document types supported by the participant

    Identifier:
      type: object
      properties:
        type:
          type: string
          description: The type of identifier (e.g., 'VAT', 'EORI')
        value:
          type: string
          description: The value of the identifier

    DocumentType:
      type: object
      properties:
        type:
          type: string
          description: The type of document (e.g., 'Invoice', 'CreditNote')
        version:
          type: string
          description: The version of the document type
    DocumentErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                description: Application-specific error code
                enum:
                  - INVALID_DATA
                  - INVALID_OPERATION
                  - MISSING_REQUIRED_DATA
              message:
                type: string
                description: Human-readable error message
              helpUrl:
                type: string
                format: uri
                description: A URL to helpful documentation
            required:
              - code
              - message
      example:
        errors:
          - code: MISSING_REQUIRED_DATA
            message: Payment instruction validation failed — missing or invalid IBAN.
            helpUrl: https://docs.provider.com/errors#PAYMENT_INSTRUCTION_FAILED
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: "X-API-Key"
          
